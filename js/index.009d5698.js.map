{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Pages/Bar/App.vue","webpack:///./src/Pages/Bar/script.js","webpack:///./src/Pages/Bar/App.vue?cba5","webpack:///./src/Pages/Bar/router.js","webpack:///./src/Pages/Bar/main.js","webpack:///./src/Pages/Login/main.js","webpack:///./src/Pages/Login/App.vue","webpack:///./src/Pages/Login/script.js","webpack:///./src/Pages/Login/App.vue?ff13"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","_createElementVNode","data-feather","src","_hoisted_9","_hoisted_11","_hoisted_14","_hoisted_17","_hoisted_19","_hoisted_26","_hoisted_30","_hoisted_32","_hoisted_35","style","_hoisted_52","id","disabled","_hoisted_88","_ctx","systemUp","isError","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","systemDownMessage","activeCall","consultCallActive","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","currentCustomerPhoneNumber","_hoisted_7","timerFormat","callTimingHour","callTimingMinutes","callTimingSeconds","_hoisted_8","title","onClick","_cache","$event","putOnHold","onHold","playFromHold","callEnd","type","maxlength","dialedNumber","args","forwardCall","consultCall","_hoisted_21","_hoisted_22","currentQueue","substring","_hoisted_23","currentCallCenter","loggedIn","_hoisted_24","_hoisted_25","consultCallIniated","_hoisted_28","_hoisted_29","consultOnHold","_hoisted_37","_hoisted_38","consultCallNumber","_hoisted_39","consultCallTimingHour","consultCallTimingMinutes","consultCallTimingSeconds","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","selectedContactId","_hoisted_44","_Fragment","_renderList","listOfCurrentContacts","item","_hoisted_45","_hoisted_46","selectedIncidentId","_hoisted_47","listOfCurrentIncident","_hoisted_48","_hoisted_49","_hoisted_50","rows","cols","comments","campaignWrapUpPending","_hoisted_51","disposition","_hoisted_59","loggingCall","_hoisted_60","currentStatus","wrapUpPending","_hoisted_61","_hoisted_62","campaignCallMessage","campaignCallAlerting","campaignCallInitiated","_hoisted_63","_hoisted_64","_hoisted_65","campaignCallBuddyName","_hoisted_66","pickupCall","inWrapUpState","callAlerting","consultCallAlerting","_hoisted_67","pickupCampaignCall","outgoingCallInitiated","_hoisted_68","outgoingCall","_hoisted_69","_hoisted_70","campaignCallEnd","_hoisted_71","_hoisted_72","fullName","agentExtension","_hoisted_73","_hoisted_74","onChange","statusChange","_normalizeClass","_hoisted_75","userStatus","label","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82","logoutClicked","_hoisted_83","required","currentLogoutStatus","logout","_hoisted_85","logoutStatus","_hoisted_86","_hoisted_87","openLogin","_hoisted_90","loading","Finesse_FQDN","Port_SSL","iExtensionReport","contactId","incidentId","oauth","loginPopup","callCustomerPopup","dialpadPopup","IUserInterfaceContext","IPopupWindowContext","extensionProvider","contextGlobal","token","restURL","interfaceUrl","callType","currentCallLogId","consultCallTimerReference","timerReference","username","password","teamName","previousStatus","domain","port","_jwClient","currentCallID","currentConsultCallID","slicedPhoneNumber","loginActionSubscribed","callCustomerSubscribed","workspaceSavingSubscribed","phoneNumberSelectedSubscribed","consultMessage","rnowSession","rnowAgentId","rnowRestURL","rnowLang","sessionId","campaignCallFailed","campaignCallID","directPreviewCampaign","predictiveCampaign","created","this","url","console","log","that","parent","document","body","addEventListener","e","target","systemInfo","then","res","sysInfoResult","parser","parse","SystemInfo","status","catch","err","methods","notifyMe","heading","Notification","permission","options","icon","dir","requestPermission","alert","eventDisconnect","disconnect","eventConnect","jabberwerx","jid","Client","jwArgs","httpBindingURL","errorCallback","onClientError","successCallback","getUserInfo","response","xml","userInfo","User","state","confirm","defaultLogout","login","resourceName","_config","unsecureAllowed","event","bindWhen","_eventHandler","evt","next","status_connected","status_disconnected","connect","rsp","nodeName","childNodes","close","notification_data","selected","firstChild","parsed_data","Update","user","firstName","lastName","reasonCode","forAll","reasonCodes","stopCallTiming","location","reload","dialogs","flag","Dialog","mediaProperties","CallOffered","TotalAgents","Alerting","callvariables","CallVariable","participants","Participant","mediaAddressType","mediaAddress","queueName","fromAddress","ForwardStartedAgent","outgoingCallEnded","thisAgentAlerting","consultingAgentInitiated","ConsultCallEnded","incomingConsultCall","ThisAgentWrap","stopConsultCallTiming","callDropped","campaignCallDrop","CallDropped","_parsed_data$dialogs$","IncommingCall","_parsed_data$dialogs$2","dialog","OfferedCallHold","thisAgentActive","callWrappedUp","ForwardedAgentWrapUp","startCallTiming","screenpop","outgoingCallFailed","calledPersonActive","ThisAgentActive","outgoingCallHold","param","errorCode","invokeAction","ConsultAlerting","ThisAgentInitiating","ThisAgentHeld","ConsultActive","callFailed","mapConsultCallVariable","startConsultCallTiming","CallPicked","CallHoldByAgent","inWrapUpMode","wrapUp","replace","_parsed_data$dialog$m","apiErrors","errType","apiError","errorType","errorMessage","toLowerCase","trim","peripheralErrorText","setTimeout","CallID","headers","xmlBodyStr","axios","put","reason_codes","ReasonCodes","ReasonCode","category","uri","split","pop","extension","btoa","registerCustomerCallAction","pass","uName","tempStatus","getUser","result1","pwd","clearInterval","setInterval","customerCall","openDialpad","IPopupWindow","createPopupWindow","setContentUrl","setHeight","setTitle","render","callData","post","__exports__","routes","path","component","Login","router","createRouter","history","createWebHistory","app","createApp","App","use","mount","loginApp","method","for","placeholder","loginFailed","_hoisted_10"],"mappings":"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","file":"js/index.009d5698.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","<template>\n  <div class=\"container left status-red\" v-if=\"!systemUp || isError\">\n    <div class=\"toast center\">{{ systemDownMessage }}</div>\n  </div>\n  <div class=\"container left\" v-if=\"activeCall || consultCallActive\">\n    <table class=\"table-block margin-right-8px\" v-if=\"activeCall\">\n      <tr>\n        <td class=\"grey-background p-l-10 p-r-10 p-b-0 p-t-0 bold\">\n          <table>\n            <tr>\n              <td>\n                <i data-feather=\"phone-call\"></i\n                >{{ currentCustomerPhoneNumber }}\n              </td>\n            </tr>\n            <tr>\n              <td class=\"right\">\n                {{ timerFormat(callTimingHour) }} :\n                {{ timerFormat(callTimingMinutes) }} :\n                {{ timerFormat(callTimingSeconds) }}\n              </td>\n            </tr>\n          </table>\n        </td>\n\n        <td class=\"p-l-10 p-r-10 p-b-0 p-t-0\">\n          <button\n            title=\"Call Hold\"\n            v-show=\"!onHold\"\n            v-on:click=\"putOnHold(true)\"\n          >\n            <img class=\"icon\" src=\"CTI Icons/pause.png\" />\n          </button>\n          <button\n            title=\"Call Resume\"\n            v-show=\"onHold\"\n            v-on:click=\"playFromHold(true)\"\n          >\n            <img class=\"icon resume\" src=\"CTI Icons/resume-call.png\" />\n          </button>\n          <button\n            title=\"Call End\"\n            v-on:click=\"callEnd(true)\"\n            v-bind:disabled=\"onHold\"\n            v-show=\"!consultCallActive\"\n          >\n            <img class=\"icon end\" src=\"CTI Icons/end-call.png\" />\n          </button>\n        </td>\n\n        <td>\n          <input\n            type=\"text\"\n            maxlength=\"15\"\n            class=\"phone_number\"\n            v-bind:disabled=\"onHold\"\n            v-model=\"dialedNumber\"\n          />\n        </td>\n        <td>\n          <button\n            title=\"Call Forward\"\n            v-on:click=\"forwardCall\"\n            v-show=\"!onHold\"\n          >\n            <img class=\"icon forward\" src=\"CTI Icons/call-transfer.png\" />\n          </button>\n          <button\n            title=\"Call Consult\"\n            v-on:click=\"consultCall\"\n            v-bind:disabled=\"false\"\n            v-show=\"!consultCallActive && !onHold\"\n          >\n            <img class=\"icon consult\" src=\"CTI Icons/consult-call.png\" />\n          </button>\n        </td>\n\n        <td class=\"grey-background p-l-10 p-r-10 p-b-0 p-t-0\" v-show=\"loggedIn\">\n          <table>\n            <tr>\n              <td>\n                <span class=\"bold\">Queue : </span>\n                <span>{{\n                  currentQueue\n                    ? currentQueue.length > 20\n                      ? currentQueue.substring(0, 20) + \"...\"\n                      : currentQueue\n                    : \"\"\n                }}</span>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <span class=\"bold\">Call Center : </span>\n                <span>{{ currentCallCenter }}</span>\n              </td>\n            </tr>\n          </table>\n        </td>\n      </tr>\n    </table>\n    <table class=\"table-block\" v-show=\"consultCallIniated\">\n      <tr>\n        <td class=\"p-l-10 p-r-10 p-b-0 p-t-0\">\n          <button title=\"Call End\" v-on:click=\"callEnd(false)\">\n            <img class=\"icon end\" src=\"CTI Icons/end-call.png\" />\n          </button>\n        </td>\n      </tr>\n    </table>\n    <table class=\"table-block\" v-show=\"consultCallActive\">\n      <tr>\n        <td class=\"p-l-10 p-r-10 p-b-0 p-t-0\" v-show=\"consultCallActive\">\n          <button\n            title=\"Call Hold\"\n            v-show=\"!consultOnHold\"\n            v-on:click=\"putOnHold(false)\"\n          >\n            <img class=\"icon\" src=\"CTI Icons/pause.png\" />\n          </button>\n          <button\n            title=\"Call Resume\"\n            v-show=\"consultOnHold\"\n            v-on:click=\"playFromHold(false)\"\n          >\n            <img class=\"icon resume\" src=\"CTI Icons/resume-call.png\" />\n          </button>\n          <button\n            title=\"Call End\"\n            v-on:click=\"callEnd(false)\"\n            v-bind:disabled=\"consultOnHold\"\n          >\n            <img class=\"icon end\" src=\"CTI Icons/end-call.png\" />\n          </button>\n        </td>\n\n        <td\n          class=\"grey-background p-l-10 p-r-10 p-b-0 p-t-0\"\n          v-show=\"consultCallActive\"\n        >\n          <table>\n            <tr>\n              <td><i data-feather=\"phone-call\"></i>{{ consultCallNumber }}</td>\n            </tr>\n            <tr>\n              <td class=\"right\">\n                {{ timerFormat(consultCallTimingHour) }} :\n                {{ timerFormat(consultCallTimingMinutes) }} :\n                {{ timerFormat(consultCallTimingSeconds) }}\n              </td>\n            </tr>\n          </table>\n        </td>\n      </tr>\n    </table>\n  </div>\n  <div\n    v-show=\"(currentStatus != 'talking'  && wrapUpPending == true  ) || ( campaignWrapUpPending == true)\"\n    class=\"container left\"\n  >\n    <table class=\"table-block\">\n      <tr>\n        <td class=\"p-l-10 p-b-0 p-t-0 grey-background\">\n          <table>\n            <tr>\n              <td>\n                <span class=\"bold center\">Contact </span>\n              </td>\n              <td>\n                <select v-model=\"selectedContactId\">\n                  <option value=\"null\">Select Contact</option>\n                  <option\n                    v-for=\"item in listOfCurrentContacts\"\n                    v-bind:value=\"item.id\"\n                    v-bind:key=\"item.id\"\n                  >\n                    {{ item.value }}\n                  </option>\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <span class=\"bold center\">Incident </span>\n              </td>\n              <td>\n                <select v-model=\"selectedIncidentId\">\n                  <option value=\"null\">Select Incident</option>\n                  <option\n                    v-for=\"item in listOfCurrentIncident\"\n                    v-bind:value=\"item.id\"\n                    v-bind:key=\"item.id\"\n                  >\n                    {{ item.value }}\n                  </option>\n                </select>\n              </td>\n            </tr>\n          </table>\n        </td>\n        <td v-show=\"campaignWrapUpPending\" style=\"vertical-align: top;\">\n          <table>\n            <tr>\n              <td>\n                <span class=\"bold center\">Comments </span>\n              </td>\n            </tr>\n             <tr>\n              <td>\n                <textarea rows=\"3\" cols=\"30\" v-model=\"comments\">\n\n                </textarea>\n              </td>\n            </tr>\n          </table>\n        </td>\n         <td v-show=\"campaignWrapUpPending\">\n          <table>\n            <tr>\n              <td>\n                <span class=\"bold center\">Disposition </span>\n              </td>\n            </tr>\n             <tr>\n              \n              <td>\n                <select v-model=\"disposition\">\n                  <option value=\"Interested\">Interested</option>\n                  <option value=\"Not Interested\">Not Interested</option>\n\n                  <option value=\"Wrong Data\">Wrong Data</option>\n                  <option value=\"Will Think\">Will Think</option>\n                  <option value=\"Callback\">Callback</option>\n                  <option value=\"No Answer\">No Answer</option>\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <td\n                class=\"\n                  p-l-10 p-r-10 p-b-0 p-t-0\n                  bold\n                  grey-background\n                  wrapup-button-td\n                \"\n                id=\"wrapup-td\" v-show=\"campaignWrapUpPending\"\n              >\n                <button\n                  id=\"wrapup-button\"\n                  class=\"wrapup-button\"\n                  v-on:click=\"\n                    loggingCall(null, null, null, 'update', true, null, null)\n                  \"\n                >\n                  <!--<img\n                    id=\"logout-icon\"\n                    class=\"icon\"\n                    src=\"CTI Icons/logout.png\"\n                  />-->Wrap Up\n                </button>\n              </td>\n            </tr>\n          </table>\n        </td>\n        <td\n          class=\"\n            p-l-10 p-r-10 p-b-0 p-t-0\n            bold\n            grey-background\n            wrapup-button-td\n          \"\n          id=\"wrapup-td\" v-show=\"!campaignWrapUpPending\"\n        >\n          <button\n            id=\"wrapup-button\"\n            class=\"wrapup-button\"\n            v-on:click=\"\n              loggingCall(null, null, null, 'update', true, null, null)\n            \"\n          >\n            <!--<img\n              id=\"logout-icon\"\n              class=\"icon\"\n              src=\"CTI Icons/logout.png\"\n            />-->Wrap Up\n          </button>\n        </td>\n        <!-- <td class=\"p-l-10 p-b-0 p-t-0 grey-background\">\n          <table>\n            <tr>\n              <td>\n                <span class=\"bold center\">Disposition </span>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <select>\n                  <option value=\"ready\" class=\"status-green\">Will Think</option>\n                  <option value=\"ready\" class=\"status-green\">Not Ready</option>\n                </select>\n              </td>\n            </tr>\n          </table>\n        </td>\n        <td class=\"p-l-10 p-b-0 p-t-0 grey-background\">\n          <textarea cols=\"50\" rows=\"3\" name=\"comments\" />\n        </td> -->\n      </tr>\n    </table>\n  </div>\n\n  <div class=\"container right container-right\">\n    <table>\n      <tr>\n        <td\n          class=\"grey-background p-l-10 p-r-10 p-b-0 p-t-0\"\n          v-show=\"(campaignCallAlerting || campaignCallInitiated) && loggedIn\"\n        >\n          <span>\n            <p>{{ campaignCallMessage }}</p>\n          </span>\n        </td>\n        <td\n          class=\"grey-background p-l-10 p-r-10 p-b-0 p-t-0\"\n          v-show=\"(campaignCallAlerting || campaignCallInitiated) && loggedIn\"\n        >\n          <table>\n            <tr>\n              <td>\n                <span class=\"bold\">Phone Number : </span>\n                <span>{{ currentCustomerPhoneNumber }}</span>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <span class=\"bold\">Name : </span>\n                <span>{{ campaignCallBuddyName }}</span>\n              </td>\n            </tr>\n          </table>\n        </td>\n        <td\n          class=\"p-l-10 p-r-10 p-b-0 p-t-0\"\n          v-show=\"\n            loggedIn &&\n            !inWrapUpState &&\n            !activeCall &&\n            (callAlerting || consultCallAlerting)\n          \"\n        >\n          <img\n            class=\"icon\"\n            v-on:click=\"pickupCall\"\n            src=\"CTI Icons/incoming-call.png\"\n          />\n        </td>\n\n        <td\n          class=\"p-l-10 p-r-10 p-b-0 p-t-0\"\n          v-show=\"campaignCallAlerting && loggedIn\"\n        >\n          <img\n            class=\"icon\"\n            v-on:click=\"pickupCampaignCall\"\n            src=\"CTI Icons/incoming-call.png\"\n          />\n        </td>\n        <!-- <td\n          class=\"p-l-10 p-r-10 p-b-0 p-t-0\"\n          v-show=\"\n            loggedIn && !activeCall && (callAlerting || consultCallAlerting)\n          \"\n        >\n          <img\n            class=\"icon\" v-show=\"callAlerting\"\n            v-on:click=\"callEnd(true)\"\n            src=\"CTI Icons/ignore-call.png\"\n          />\n          <img\n            class=\"icon\" v-show=\"consultCallAlerting\"\n            v-on:click=\"callEnd(false)\"\n            src=\"CTI Icons/ignore-call.png\"\n          />\n        </td> -->\n        <td>\n          <input\n            type=\"text\"\n            maxlength=\"15\"\n            class=\"phone_number\"\n            v-show=\"\n              loggedIn &&\n              !inWrapUpState &&\n              wrapUpPending == false &&\n              !campaignCallAlerting &&\n              !campaignCallInitiated &&\n              !activeCall &&\n              !callAlerting &&\n              !consultCallAlerting &&\n              !consultCallActive &&\n              !outgoingCallInitiated &&\n              !campaignWrapUpPending\n            \"\n            v-bind:disabled=\"false\"\n            v-model=\"dialedNumber\"\n          />\n        </td>\n        <td\n          class=\"p-l-10 p-r-10 p-b-0 p-t-0\"\n          v-show=\"\n            loggedIn &&\n            !inWrapUpState &&\n            wrapUpPending == false &&\n            !campaignCallAlerting &&\n            !campaignCallInitiated &&\n            !activeCall &&\n            !callAlerting &&\n            !consultCallAlerting &&\n            !consultCallActive &&\n            !outgoingCallInitiated &&\n             !campaignWrapUpPending\n          \"\n        >\n          <img\n            class=\"icon\"\n            v-on:click=\"outgoingCall($event)\"\n            src=\"CTI Icons/outgoing-call.png\"\n          />\n        </td>\n        <td\n          class=\"p-l-10 p-r-10 p-b-0 p-t-0\"\n          v-show=\"\n            loggedIn &&\n            !inWrapUpState &&\n            !campaignCallAlerting &&\n            wrapUpPending == false &&\n            !activeCall &&\n            !callAlerting &&\n            !consultCallAlerting &&\n            !consultCallActive &&\n            outgoingCallInitiated\n          \"\n        >\n          <img\n            v-on:click=\"callEnd(true)\"\n            class=\"icon end\"\n            src=\"CTI Icons/end-call.png\"\n          />\n        </td>\n\n        <td\n          class=\"p-l-10 p-r-10 p-b-0 p-t-0\"\n          v-show=\"(campaignCallAlerting || campaignCallInitiated) && loggedIn\"\n        >\n          <img\n            v-on:click=\"campaignCallEnd()\"\n            class=\"icon end\"\n            src=\"CTI Icons/end-call.png\"\n          />\n        </td>\n        <td class=\"p-l-10 p-b-0 p-t-0 grey-background bold\" v-if=\"loggedIn\">\n          <table>\n            <tr>\n              <td class=\"bold\">{{ fullName }}</td>\n            </tr>\n            <tr>\n              <td>{{ agentExtension }}</td>\n            </tr>\n          </table>\n        </td>\n\n        <td v-show=\"loggedIn\" class=\"p-l-10 p-b-0 p-t-0 grey-background\">\n          <table>\n            <tr>\n              <td>\n                <span class=\"bold center\">Status </span>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <!-- || currentStatus == 'work' v-bind:disabled=\"currentStatus == 'talking'\" -->\n                <select\n                  @change=\"statusChange()\"\n                  v-model=\"currentStatus\"\n                  v-bind:class=\"{\n                    'status-red': currentStatus != 'ready',\n                    'status-green': currentStatus == 'ready',\n                  }\"\n                >\n                  <option value=\"ready\" class=\"status-green\">Ready</option>\n                  <option\n                    v-for=\"item in userStatus\"\n                    class=\"status-red\"\n                    v-bind:value=\"item.id\"\n                    v-bind:key=\"item.id\"\n                  >\n                    {{ item.label }}\n                  </option>\n                  <option value=\"work\" disabled>Wrap Up</option>\n                  <option value=\"not_ready\" disabled>Not Ready</option>\n                  <option value=\"talking\" disabled>Talking</option>\n                </select>\n              </td>\n            </tr>\n          </table>\n        </td>\n        <td v-show=\"loggedIn\" class=\"p-0 grey-background\">\n          <table class=\"logout-button-table\">\n            <tr>\n              <td\n                class=\"\n                  p-l-10 p-r-10 p-b-0 p-t-0\n                  bold\n                  grey-background\n                  logout-button-td\n                \"\n                id=\"logout-td\"\n              >\n                <button\n                  id=\"logout-button\"\n                  class=\"logout-button\"\n                  v-show=\"loggedIn\"\n                  v-bind:disabled=\"\n                    currentStatus == 'talking' || currentStatus == 'work'\n                  \"\n                  v-on:click=\"logoutClicked = true\"\n                >\n                  <!--<img\n                    id=\"logout-icon\"\n                    class=\"icon\"\n                    src=\"CTI Icons/logout.png\"\n                  />-->Logout\n                </button>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <!--<select required v-model=\"currentLogoutStatus\" v-bind:disabled=\"currentStatus == 'talking'\" oninvalid=\"this.setCustomValidity('Please select a Logout Reason')\" onchange=\"this.setCustomValidity('')\">-->\n                <select\n                  id=\"logout-select\"\n                  required\n                  v-model=\"currentLogoutStatus\"\n                  v-bind:disabled=\"currentStatus == 'talking'\"\n                  v-show=\"logoutClicked\"\n                  @change=\"logout()\"\n                >\n                  <option value=\"0\" disabled>Logged In</option>\n                  <option\n                    v-for=\"item in logoutStatus\"\n                    v-bind:value=\"item.id\"\n                    v-bind:key=\"item.id\"\n                  >\n                    {{ item.label }}\n                  </option>\n                </select>\n              </td>\n            </tr>\n          </table>\n        </td>\n        <td v-show=\"systemUp && !loggedIn\" class=\"p-l-10 p-r-10 p-b-0 p-t-0\">\n          <button v-on:click=\"openLogin\">\n            <img class=\"icon\" src=\"CTI Icons/login-icon.png\" />\n          </button>\n        </td>\n      </tr>\n    </table>\n  </div>\n  <div class=\"loading\" v-show=\"loading\" id=\"loading\">Loading&#8230;</div>\n</template>\n<script src=\"./script.js\"></script>\n","import axios from 'axios';\nimport './../../assets/css/style.css';\nimport parser from 'fast-xml-parser';\n\nexport default {\n  name: 'Bar',\n  data: function () {\n    return {\n      logoutClicked: false,\n      Finesse_FQDN: \"ccuccxtest.lutrijabih.ba\",\n      Port_SSL: \"8445\",\n      systemUp: true,\n      isError: false,\n      iExtensionReport: null,\n      contactId: null,\n      incidentId: null,\n      listOfCurrentIncident: [],\n      listOfCurrentContacts: [],\n      selectedIncidentId: null,\n      selectedContactId: null,\n      systemDownMessage: null,\n      oauth: null,\n      activeCall: false,\n      loading: false,\n      loggedIn: false,\n      loginPopup: null,\n      callCustomerPopup: null,\n      dialpadPopup: null,\n      onHold: false,\n      consultOnHold: false,\n      IUserInterfaceContext: null,\n      IPopupWindowContext: null,\n      extensionProvider: null,\n      contextGlobal: null,\n      token: null,\n      restURL: null,\n      interfaceUrl: null,\n      callType: null,   // 1 = Inbound, 2 = Outboung, 3 = OutboundCampaign\n      currentCallLogId: null,\n      callTimingHour: 0,\n      callTimingMinutes: 0,\n      callTimingSeconds: 0,\n      consultCallTimingHour: 0,\n      consultCallTimingMinutes: 0,\n      consultCallTimingSeconds: 0,\n      consultCallTimerReference: null,\n      timerReference: null,\n      username: null,\n      password: null,\n      fullName: null,\n      agentExtension: 2003,\n      teamName: null,\n      userStatus: [],\n      logoutStatus: [],\n      currentStatus: null,\n      previousStatus: null,\n      currentLogoutStatus: \"0\",\n      domain: null,\n      port: null,\n      _jwClient: null,\n      currentCallID: null,\n      currentConsultCallID: null,\n      currentCustomerPhoneNumber: null,\n      slicedPhoneNumber: null,\n      currentQueue: \"\",\n      currentCallCenter: null,\n      callAlerting: false,\n      consultCallAlerting: false,\n      consultCallIniated: false,\n      outgoingCallInitiated: false,\n      loginActionSubscribed: false,\n      callCustomerSubscribed: false,\n      workspaceSavingSubscribed: false,\n      phoneNumberSelectedSubscribed: false,\n      dialedNumber: null,\n      consultCallActive: false,\n      consultCallNumber: null,\n      consultMessage: null,\n      rnowSession: null,\n      rnowAgentId: null,\n      rnowRestURL: null,\n      rnowLang: null,\n      inWrapUpState: false,\n      wrapUpPending: false,\n      sessionId: null,\n      campaignCallAlerting: false,\n      campaignCallInitiated: false,\n      campaignCallFailed: false,\n\n      campaignCallBuddyName: \"\",\n      campaignCallID: null,\n      campaignCallMessage: \"\",\n\n      directPreviewCampaign: false,\n      disposition: null,\n      comments: null,\n      campaignWrapUpPending: false,\n      predictiveCampaign: false\n    }\n  },\n\n  created() {\n\n    this.domain = this.Finesse_FQDN;\n    this.port = this.Port_SSL;\n    this.url = \"https://\" + this.domain + \":\" + this.port + \"/finesse/api/\";\n    console.log(this.url);\n    /*axios.get(\"config/config.json\").then((res) => {\n        this.domain = res.data.Finesse_FQDN;\n        this.port = res.data.Port_SSL;\n      this.url = \"https://\" + this.domain + \":\" + this.port + \"/finesse/api/\";\n      console.log(res);\n    }).catch((err) => {\n      this.errorMessage = \"Error while loading config file\";\n      this.loginFailed = true;\n    });*/\n    var that = this;\n    this.loading = true;\n    window.parent.document.body.addEventListener('click', function (e) {\n      that.logoutClicked = false;\n    }, true);\n    document.body.addEventListener('click', function (e) {\n      if (e.target.id != \"logout-button\" && e.target.id != \"logout-icon\" && e.target.id != \"logout-td\" && e.target.id != \"logout-select\") {\n        that.logoutClicked = false;\n        console.log(\"here\");\n      }\n\n    }, true);\n    this.systemInfo().then((res) => {\n      var sysInfoResult = parser.parse(res.data);\n      if (sysInfoResult.SystemInfo.status != 'IN_SERVICE') {\n\n        console.log(\"not in service\");\n        that.systemDownMessage = \"1111111111Cisco Finesse Server seems down, please refersh the page. If problem presists, kindly contact administrator.\";\n\n        that.systemUp = false;\n      } else {\n        console.log(\"here\");\n        \n        that.agentExtension =2003;\n        that.loading = false;\n      }\n    }).catch((err) => {\n      console.log(err);\n      this.loading = false;\n      console.log(this.url);\n      this.systemDownMessage = \"2222222222222222222Cisco Finesse Server seems down, please refersh the page. If problem presists, kindly contact administrator.\";\n      this.systemUp = false;\n    });\n  },\n  methods: {\n\n    timerFormat: function (n) {\n      return (n < 10 ? \"0\" : \"\") + n;\n    },\n    notifyMe: function (heading, body) {\n      if (!(\"Notification\" in window)) {\n        alert(\"This browser does not support desktop notification\");\n      }\n      else if (Notification.permission === \"granted\") {\n        var options = {\n          body: body,\n          icon: \"favicon.ico\",\n          dir: \"ltr\"\n        };\n        var notification = new Notification(heading, options);\n      }\n      else if (Notification.permission !== 'denied') {\n        Notification.requestPermission(function (permission) {\n          if (!('permission' in Notification)) {\n            Notification.permission = permission;\n          }\n\n          if (permission === \"granted\") {\n            var options = {\n              body: body,\n              icon: \"favicon.ico\",\n              dir: \"ltr\"\n            };\n            var notification = new Notification(heading, options);\n          }\n        });\n      }\n    },\n    eventDisconnect: function () {\n      if (this._jwClient) {\n        this._jwClient.disconnect();\n        this._jwClient = null;\n      }\n\n    },\n    eventConnect: function (username, password) {\n      this.loading = true;\n      var that = this;\n      if (window.jabberwerx) {\n        var jid = username + \"@\" + this.domain;\n\n        //Create JabbwerWerx object.\n        this._jwClient = new jabberwerx.Client(\"cisco\");\n\n        //Arguments to feed into the JabberWerx client on creation.\n        var jwArgs = {\n          //Defines the BOSH path. Should match the path pattern in the proxy\n          //so that it knows where to forward the BOSH request to.\n          httpBindingURL: \"https://\" + this.domain + \":\" + this.port + \"/http-bind\",\n          //Calls this function callback on successful BOSH connection by the\n          //JabberWerx library.\n          errorCallback: this.onClientError,\n          successCallback: function () {\n            //Get the server generated resource ID to be used for subscriptions.\n            // _finesse.setResource(_jwClient.resourceName);\n            that.loading = false;\n            that.getUserInfo(username, password).then((response) => {\n              var xml = response.data;\n              var userInfo = parser.parse(xml);\n              console.log(userInfo);\n              \n              if (userInfo.User.state != \"LOGOUT\") {\n                if (confirm(\"It seems you already logged in OSC CTI, please click 'Yes' to login here or 'No' to cancel.\")) {\n                  that.defaultLogout(username, password).then((response) => {\n                    that.login(username, password);\n                  }).catch((err) => {\n                    console.log(err);\n                  });\n                } else {\n                 \n                  that.loading = false;\n                }\n              }\n              else {\n                that.login(username, password);\n              }\n\n            }).catch((err) => {\n              console.log(err);\n              that.loading = false;\n            });\n            //that.login(username, password);\n            console.log(\"Success callback after Jabber Event Connect \");\n            console.log(that._jwClient.resourceName);\n          }\n        };\n\n        jabberwerx._config.unsecureAllowed = true;\n        //Bind invoker function to any events that is received. Only invoke\n        //handler if XMPP message is in the specified structure.\n        this._jwClient.event(\"messageReceived\").bindWhen(\n          \"event[xmlns='http://jabber.org/protocol/pubsub#event'] items item notification\",\n          this._eventHandler);\n        this._jwClient.event(\"clientStatusChanged\").bind(function (evt) {\n          if (evt.data.next == jabberwerx.Client.status_connected) {\n            // attempt to login the agent\n            // _finesse.signIn(_username, _extension, true, _signInHandler, _signInHandler);\n            // that.login(username, password);\n            console.log(\"Sign In Handler\");\n\n          } else if (evt.data.next == jabberwerx.Client.status_disconnected) {\n            // _finesse.signOut(_username, _extension, null, _signOutHandler, _signOutHandler);\n            console.log(\"Sign out Handler\");\n            this.onClientError(evt.data);\n            this.eventDisconnect();\n\n          }\n        });\n\n        //Connect to BOSH connection.\n        this._jwClient.connect(jid, password, jwArgs);\n\n      } else {\n        alert(\"CAXL library not found. Please download from http://developer.cisco.com/web/xmpp/resources\")\n      }\n    },\n\n    onClientError: function (rsp) {\n      this.loading = false;\n      console.log(rsp);\n      if (rsp.nodeName == \"error\" && rsp.childNodes[0].nodeName == \"not-authorized\") {\n        // this.systemUp = false;\n        this.isError = true;\n        //this.systemDownMessage = \"Unauthoized Login\"\n        this.systemDownMessage = \"Either username or password is incorrect, please enter correct username and password.\";\n        this.loginPopup.close();\n        this.loading = false;\n        //this.notifyMe(\"Error\", \"Unauthoized Login\");\n        this.notifyMe(\"Error\", \"Either username or password is incorrect, please enter correct username and password.\");\n        //this.eventDisconnect();\n      }\n      else if (rsp.nodeName == \"stream:error\" && rsp.childNodes[0].nodeName == \"service-unavailable\") {\n        this.systemUp = false;\n        this.systemDownMessage = \"Service Unavailable or please check your VPN Connection\";\n        this.loginPopup.close();\n        this.loading = false;\n        this.notifyMe(\"Error\", \"Service Unavailable or please check your VPN Connection\");\n      }\n    },\n    _eventHandler: function (data) {\n      // console.log(data.selected.firstChild.data);\n      let notification_data = parser.parse(data.selected.firstChild.data);\n      let parsed_data = notification_data.Update.data;\n      console.log(parsed_data);\n\n      if (parsed_data.user) {\n        this.fullName = parsed_data.user.firstName + \" \" + parsed_data.user.lastName;\n        this.teamName = parsed_data.user.teamName;\n        if (parsed_data.user.state == \"READY\") {\n          this.currentStatus = \"ready\";\n          this.previousStatus = \"ready\";\n          this.loggedIn = true;\n\n        } else if (parsed_data.user.state == \"NOT_READY\") {\n          this.loggedIn = true;\n          if (parsed_data.user.reasonCode) {\n            if (parsed_data.user.reasonCode.forAll == false) {\n              this.currentStatus = parsed_data.user.reasonCode.id;\n              this.previousStatus = parsed_data.user.reasonCode.id;\n            }\n            else {\n              this.currentStatus = 'not_ready';\n              this.previousStatus = \"not_ready\";\n            }\n          }\n          else {\n            this.currentStatus = 'not_ready';\n            this.previousStatus = \"not_ready\";\n          }\n\n          if (parsed_data.user.reasonCode.label == \"Agent Logon\") {\n            this.reasonCodes();\n          }\n        } else if (parsed_data.user.state == \"LOGOUT\") {\n          this.loggedIn = false;\n          this.activeCall = false;\n          this.onHold = false;\n          this.currentLogoutStatus = null;\n          this.stopCallTiming();\n          window.location.reload();\n        }\n        else if (parsed_data.user.state == \"TALKING\") {\n          this.currentStatus = 'talking';\n          this.previousStatus = 'talking';\n        }\n        else if (parsed_data.user.state == \"WORK\") {  //When the agent goes into Wrap Up state\n          this.currentStatus = 'work';\n          this.previousStatus = 'work';\n        }\n\n        if (parsed_data.user.state == \"READY\" && this.wrapUpPending == true && this.campaignWrapUpPending == false) {\n          this.wrapUpPending = false;\n        }\n        this.systemUp = true;\n        this.systemDownMessage = null;\n      }\n      else if (parsed_data.dialogs) {\n\n        this.systemUp = true;\n        this.systemDownMessage = null;\n\n        let flag = false;\n        if (parsed_data.dialogs.Dialog.mediaProperties) {\n          if (parsed_data.dialogs.Dialog.mediaProperties.callType) {\n            if (parsed_data.dialogs.Dialog.mediaProperties.callType == \"OFFERED\") {\n              flag = true;\n              let CallOffered = false;\n              let TotalAgents = 0;\n              let Alerting = false;\n              this.currentCallID = parsed_data.dialogs.Dialog.id;\n              this.sessionId = parsed_data.dialogs.Dialog.mediaProperties.callvariables.CallVariable[4].value;\n              // let CallOffering = false;\n\n              for (let i = 0; i < parsed_data.dialogs.Dialog.participants.Participant.length; i++) {\n                if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"DROPPED\" && parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddress == this.agentExtension) {\n                  CallOffered = true;\n                }\n                if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"ALERTING\" && parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddress == this.agentExtension) {\n                  Alerting = true;\n                }\n                if (parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\") {\n                  TotalAgents++;\n                }\n              }\n              if (CallOffered) {\n                this.stopCallTiming();\n                this.activeCall = false;\n                this.onHold = false;\n                this.loading = false;\n                this.dialedNumber = null;\n                this.inWrapUpState = false;\n\n                this.queueName = null;\n                this.callAlerting = false;\n                this.campaignCallAlerting = false;\n                this.campaignCallInitiated = false;\n                this.campaignWrapUpPending = false;\n\n                this.wrapUpPending = false;\n\n                // this.listOfCurrentContacts = [];\n                // this.listOfCurrentIncident = [];\n                // this.selectedIncidentId = null;\n                // this.selectedContactId = null;\n              }\n              else if (Alerting && TotalAgents == 2) {\n                this.callAlerting = true;\n                this.currentCustomerPhoneNumber = parsed_data.dialogs.Dialog.fromAddress;\n                this.notifyMe(\"Incomming Call\", \"Called Forwarded from Agent: \" + ForwardStartedAgent + \" for Customer: \" + parsed_data.dialogs.Dialog.fromAddress);\n              }\n\n            }\n            else if (parsed_data.dialogs.Dialog.mediaProperties.callType == \"OUT\") {\n              flag = true;\n              let outgoingCallEnded = false;\n              let thisAgentAlerting = false;\n              let consultingAgentInitiated = false;\n\n              if (typeof parsed_data.dialogs.Dialog.participants.Participant === 'object') {\n                if (parsed_data.dialogs.Dialog.participants.Participant.state == \"DROPPED\") {\n                  outgoingCallEnded = true;\n                }\n              }\n\n              for (let i = 0; i < parsed_data.dialogs.Dialog.participants.Participant.length; i++) {\n                if (parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddress == this.agentExtension) {\n                  if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"DROPPED\")\n                    outgoingCallEnded = true;\n                  else if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"ALERTING\")\n                    thisAgentAlerting = true;\n                }\n                else if (parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddress != this.agentExtension) {\n                  if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"INITIATED\")\n                    consultingAgentInitiated = true;\n                }\n              }\n              if (outgoingCallEnded) {\n\n                this.onHold = false;\n                this.currentCustomerPhoneNumber = null;\n                this.dialedNumber = null;\n                this.queueName = null;\n                this.loading = false;\n                this.callAlerting = false;\n\n                console.log(\"Dropped when Alerting\");\n                this.stopCallTiming();\n                if (this.activeCall) {\n                  this.loggingCall(null, null, 2, \"update\", false, null, (this.callTimingSeconds + (this.callTimingMinutes * 60) + (this.callTimingHour * 3600)));\n                }\n                // this.listOfCurrentContacts = [];\n                // this.listOfCurrentIncident = [];\n                // this.selectedIncidentId = null;\n                // this.selectedContactId = null;\n                this.outgoingCallInitiated = false;\n                this.activeCall = false;\n              }\n\n              // This is done for when outgoing call is made to another agent by dialling extension number\n              if (thisAgentAlerting && consultingAgentInitiated) {\n                this.currentConsultCallID = parsed_data.dialogs.Dialog.id;\n                this.sessionId = parsed_data.dialogs.Dialog.mediaProperties.callvariables.CallVariable[4].value;\n                this.consultMessage = \"Consult Call Coming...\";\n                this.notifyMe(\"Incomming Call\", \"Consult Call Coming \");\n                // this.consultCallActive = true;\n                this.consultCallAlerting = true;\n                this.consultOnHold = false;\n                // this.callAlerting = true;\n\n              }\n\n            }\n            else if (parsed_data.dialogs.Dialog.mediaProperties.callType == \"CONSULT\") {\n              flag = true;\n              let ConsultCallEnded = false;\n              let incomingConsultCall = false;\n              let ThisAgentWrap = false;\n\n              if (typeof parsed_data.dialogs.Dialog.participants.Participant === 'object') {\n                if (parsed_data.dialogs.Dialog.participants.Participant.state == \"WRAP_UP\") {\n                  ThisAgentWrap = true;\n                }\n                if (parsed_data.dialogs.Dialog.participants.Participant.state == \"DROPPED\") {\n                  ConsultCallEnded = true;\n                }\n              }\n\n              for (let i = 0; i < parsed_data.dialogs.Dialog.participants.Participant.length; i++) {\n                if (parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddress == this.agentExtension) {\n                  if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"DROPPED\")\n                    ConsultCallEnded = true;\n                  else if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"ALERTING\")\n                    incomingConsultCall = true;\n                }\n                // else if (parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddress == this.dialedNumber) {\n                //   if(parsed_data.dialogs.Dialog.participants.Participant[i].state == \"DROPPED\")\n                //     ConsultCallEnded = true;\n                // }\n              }\n\n              if (incomingConsultCall) {\n                this.currentConsultCallID = parsed_data.dialogs.Dialog.id;\n                this.sessionId = parsed_data.dialogs.Dialog.mediaProperties.callvariables.CallVariable[4].value;\n                this.consultMessage = \"Consult Call Coming...\";\n                this.notifyMe(\"Incomming Call\", \"Consult Call Coming \");\n                // this.consultCallActive = true;\n                this.consultCallAlerting = true;\n                this.consultOnHold = false;\n                // this.callAlerting = true;\n\n              }\n\n              if (ThisAgentWrap) {\n                this.loggingCall(null, null, 2, \"update\", false, null, (this.consultCallTimingSeconds + (this.consultCallTimingMinutes * 60) + (this.consultCallTimingHour * 3600)));\n                this.stopConsultCallTiming();\n              }\n              if (ConsultCallEnded) {\n                this.consultMessage = null;\n                this.consultCallActive = false;\n                this.currentConsultCallID = null;\n                this.consultCallAlerting = false;\n                this.dialedNumber = null;\n                this.consultCallNumber = null;\n                this.loading = false;\n                this.stopConsultCallTiming();\n                if (this.activeCall)\n                  this.playFromHold(true);\n              }\n            }\n\n            else if (parsed_data.dialogs.Dialog.mediaProperties.callType == \"AGENT_INSIDE\") {\n              flag = true;\n\n              let ConsultCallEnded = false;\n\n              if (typeof parsed_data.dialogs.Dialog.participants.Participant === 'object') {\n                if (parsed_data.dialogs.Dialog.participants.Participant.state == \"DROPPED\" && parsed_data.dialogs.Dialog.participants.Participant.mediaAddress == this.agentExtension) {\n                  ConsultCallEnded = true;\n                }\n\n              }\n              console.log(\"after if: \" + ConsultCallEnded);\n              for (let i = 0; i < parsed_data.dialogs.Dialog.participants.Participant.length; i++) {\n\n                if (parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddress == this.agentExtension) {\n\n                  // if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"INITIATED\")\n                  //   ThisAgentInitiating = true;\n                  // if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"ACTIVE\")\n                  //   ThisAgentActive = true;\n                  if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"DROPPED\") {\n                    ConsultCallEnded = true;\n                    console.log(\"Inside dropped\");\n                  }\n\n                  // else if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"HELD\"){\n                  //   ThisAgentHeld = true;\n                  //   debugger;\n                  // }\n\n                }\n                else if (parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddress != this.agentExtension) {\n                  // if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"ALERTING\")\n                  //   ConsultAlerting = true;\n                  // if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"ACTIVE\") {\n                  //   ConsultActive = true;\n                  //   this.consultCallNumber = parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddress;\n                  // }\n\n                  // if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"DROPPED\")\n                  //   ConsultCallEnded = true;\n                }\n\n              }\n\n              if (ConsultCallEnded) {\n                console.log(\"last block\");\n                this.consultCallIniated = false; /**added when consult call is ended from the 1st agent side and when its not picked by 2nd agent */\n                // this.stopConsultCallTiming();\n                this.consultMessage = null;\n                this.consultCallActive = false;\n                this.currentConsultCallID = null;\n                this.dialedNumber = null;\n                this.consultOnHold = false;\n                this.consultCallAlerting = false;\n                this.loading = false;\n                this.callType = null;\n                this.outgoingCallInitiated = false;\n                console.log(this.activeCall);\n                console.log(this.callAlerting);\n                console.log(this.outgoingCallInitiated);\n              }\n\n            }\n\n            else if (parsed_data.dialogs.Dialog.mediaProperties.callType == \"OTHER_IN\") {\n              flag = true;\n\n              let campaignCallAlerting = false;\n              let callDropped = false;\n              // if(typeof parsed_data.dialogs.Dialog.participants.Participant === 'object'){\n              if (parsed_data.dialogs.Dialog.state == \"ALERTING\") {\n                campaignCallAlerting = true;\n              }\n\n              //}\n              if (parsed_data.dialogs.Dialog.mediaProperties.queueName)\n                this.currentQueue = parsed_data.dialogs.Dialog.mediaProperties.queueName;\n              this.currentCallID = parsed_data.dialogs.Dialog.id;\n              this.sessionId = parsed_data.dialogs.Dialog.mediaProperties.callvariables.CallVariable[4].value;\n              let CallPicked = true;\n              let CallHoldByAgent = false;\n              let inWrapUpMode = false;\n\n              for (let i = 0; i < parsed_data.dialogs.Dialog.participants.Participant.length; i++) {\n\n                if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"DROPPED\") {\n                  callDropped = true;\n                }\n\n                /*  if (parsed_data.dialogs.Dialog.participants.Participant[i].state != \"ACTIVE\") {\n                    CallPicked = false;\n                  }\n                  if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"HELD\" && parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\") {\n                    CallHoldByAgent = true;\n                  }\n                  if (parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialogs.Dialog.participants.Participant[i].state == \"WRAP_UP\") {\n                    inWrapUpMode = true;\n\n                  }*/\n              }\n\n              if (callDropped) {\n                //  this.wrapUpPending = true;\n                this.campaignWrapUpPending = true;\n\n                this.campaignCallAlerting = false;\n                this.campaignCallInitiated = false;\n                this.campaignCallID = null;\n                this.campaignCallBuddyName = null;\n                this.currentCustomerPhoneNumber = null;\n                this.loading = false;\n                this.activeCall = false;\n                this.directPreviewCampaign = false;\n              }\n\n              console.log(this.directPreviewCampaign);\n              console.log(this.wrapUpPending);\n              console.log(this.currentStatus);\n\n              if (campaignCallAlerting) {\n\n                this.campaignCallAlerting = true;\n                this.directPreviewCampaign = true;\n                this.campaignCallMessage = \"\";\n                this.campaignCallID = parsed_data.dialogs.Dialog.id;\n                //    this.campaignCallBuddyName = parsed_data.dialogs.Dialog.mediaProperties.callvariables.CallVariable[16].value.replace(\",\", \" \");\n                //  this.currentCustomerPhoneNumber = parsed_data.dialogs.Dialog.mediaProperties.callvariables.CallVariable[14].value;\n                this.currentCustomerPhoneNumber = parsed_data.dialogs.Dialog.fromAddress;\n\n              }\n\n\n            }\n            else if (parsed_data.dialogs.Dialog.mediaProperties.callType == \"OUTBOUND_DIRECT_PREVIEW\") {\n\n              /* flag = true;\n               let outgoingCallEnded = false;\n               let thisAgentAlerting = false;\n               let consultingAgentInitiated = false;\n               */\n              let campaignCallDrop = false;\n              if (typeof parsed_data.dialogs.Dialog.participants.Participant === 'object') {\n                if (parsed_data.dialogs.Dialog.participants.Participant.state == \"DROPPED\") {\n                  campaignCallDrop = true;\n                }\n              }\n\n             \n              if (campaignCallDrop) {\n\n                this.campaignCallAlerting = false;\n                this.campaignCallInitiated = false;\n                this.campaignCallID = null;\n                this.campaignCallBuddyName = null;\n                this.currentCustomerPhoneNumber = null;\n\n              }\n\n            }\n\n          }\n        }\n        if (!flag) {\n\n          if (parsed_data.dialogs.Dialog.state == \"ACTIVE\" || parsed_data.dialogs.Dialog.state == \"DROPPED\") {\n            if (parsed_data.dialogs.Dialog.participants) {\n              if (parsed_data.dialogs.Dialog.participants.Participant) {\n                if (parsed_data.dialogs.Dialog.mediaProperties.queueName)\n                  this.currentQueue = parsed_data.dialogs.Dialog.mediaProperties.queueName;\n                this.currentCallID = parsed_data.dialogs.Dialog.id;\n                this.sessionId = parsed_data.dialogs.Dialog.mediaProperties.callvariables.CallVariable[4].value;\n                let CallDropped = false;\n\n                for (let i = 0; i < parsed_data.dialogs.Dialog.participants.Participant.length; i++) {\n\n                  if (parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialogs.Dialog.participants.Participant[i].state == \"DROPPED\") {\n                    CallDropped = true;\n\n                  }\n\n                }\n                if (CallDropped) {\n                  this.currentCustomerPhoneNumber = null; /**this is umcommented to solve the case when incomming call is not picked */\n                  this.queueName = null; /**this is umcommented to solve the case when incomming call is not picked */\n                  this.callAlerting = false; /**this is umcommented to solve the case when incomming call is not picked */\n                  \n\n                  this.activeCall = false;\n                  this.onHold = false;\n                  this.dialedNumber = null;\n                  this.loading = false;\n                 \n                  if (this.inWrapUpState == false) {\n                    this.loggingCall(null, null, 2, \"update\", false, null, (this.callTimingSeconds + (this.callTimingMinutes * 60) + (this.callTimingHour * 3600)));\n                    this.stopCallTiming();\n                  }\n                  this.inWrapUpState = false;\n\n                }\n\n              }\n            }\n          }\n\n          else if (parsed_data.dialogs.Dialog.state == \"ALERTING\" && parsed_data.dialogs.Dialog.mediaProperties.callType != \"OUTBOUND_DIRECT_PREVIEW\") {\n            if (parsed_data.dialogs.Dialog.participants) {\n              if (parsed_data.dialogs.Dialog.participants.Participant) {\n                this.currentQueue = parsed_data.dialogs.Dialog.mediaProperties.queueName;\n                this.currentCallID = parsed_data.dialogs.Dialog.id;\n                this.sessionId = parsed_data.dialogs.Dialog.mediaProperties.callvariables.CallVariable[4].value;\n                this.currentCallCenter = parsed_data.dialogs.Dialog.mediaProperties.callvariables.CallVariable[1].value;\n                let IncommingCall = false;\n                let TotalAgents = 0;\n                let CallDropped = false;\n\n                for (let i = 0; i < parsed_data.dialogs.Dialog.participants.Participant.length; i++) {\n\n                  if (parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\") {\n                    TotalAgents++;\n                  }\n                  if (parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialogs.Dialog.participants.Participant[i].state == \"ALERTING\") {\n                    IncommingCall = true;\n                  }\n                  /* if (parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType != \"AGENT_DEVICE\" && parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddress != \"0Anonymous\") {\n                     this.currentCustomerPhoneNumber = parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddress; //cfeddcd\n                   }*/\n                  if (parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialogs.Dialog.participants.Participant[i].state == \"DROPPED\") {\n                    CallDropped = true;\n\n                  }\n                }\n                if (IncommingCall && TotalAgents == 1) {\n\n                  this.currentCustomerPhoneNumber = parsed_data.dialogs.Dialog.fromAddress;\n                  this.callAlerting = true;\n\n                  this.notifyMe(\"Incomming Call\", \"New Call from \" + parsed_data.dialogs.Dialog.participants.Participant[1].mediaAddress);\n                  //this.activeCall = true;\n                }\n\n                if (parsed_data.dialogs.Dialog.mediaProperties.callvariables.CallVariable[13]?.value) {\n                  if (TotalAgents == 2) {\n                    this.currentCustomerPhoneNumber = parsed_data.dialogs.Dialog.mediaProperties.callvariables.CallVariable[14]?.value;\n                    this.callAlerting = true;\n\n                  }\n                }\n\n                if (CallDropped) {\n                  this.stopCallTiming();\n                  this.activeCall = false;\n                  this.onHold = false;\n                  this.currentCustomerPhoneNumber = null;\n                  this.dialedNumber = null;\n                  this.queueName = null;\n                  this.loading = false;\n                  this.callAlerting = false;\n                  console.log(\"Dropped when Alerting\");\n                }\n\n              }\n            }\n          }\n\n        }\n\n      }\n      else if (parsed_data.dialog) {\n        this.systemUp = true;\n        this.systemDownMessage = null;\n\n        let flag = false;\n        if (parsed_data.dialog.mediaProperties) {\n          if (parsed_data.dialog.mediaProperties.callType) {\n            if (parsed_data.dialog.mediaProperties.callType == \"OFFERED\") {\n              flag = true;\n              let CallOffered = false;\n              let TotalAgents = 0;\n              let Alerting = false;\n              this.currentCallID = parsed_data.dialog.id;\n\n              this.queueName = parsed_data.dialog.mediaProperties.queueName;\n\n              this.sessionId = parsed_data.dialog.mediaProperties.callvariables.CallVariable[4].value;\n              this.currentCallCenter = parsed_data.dialog.mediaProperties.callvariables.CallVariable[1].value;\n              let ForwardedCallPicked = true;\n              let ForwardStartedAgent = null;\n              let OfferedCallHold = false;\n              let thisAgentActive = false;\n              // let CallOffering = false;\n              let callWrappedUp = false;\n\n              let TotalActiveParticipants = 0;\n              let ForwardedAgentWrapUp = false;\n\n              for (let i = 0; i < parsed_data.dialog.participants.Participant.length; i++) {\n\n                // if (parsed_data.dialog.participants.Participant[i].state == \"ACTIVE\" ) {\n                //   TotalActiveParticipants++;\n                // }\n\n                if (parsed_data.dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\") {\n                  TotalAgents++;\n                }\n                if (parsed_data.dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialog.participants.Participant[i].mediaAddress == this.agentExtension && parsed_data.dialog.participants.Participant[i].state == \"HELD\") {\n                  OfferedCallHold = true;\n                }\n                if (parsed_data.dialog.participants.Participant[i].state == \"ALERTING\" && parsed_data.dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialog.participants.Participant[i].mediaAddress == this.agentExtension) {\n                  Alerting = true;\n                }\n                if (parsed_data.dialog.participants.Participant[i].state == \"ACTIVE\" && parsed_data.dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialog.participants.Participant[i].mediaAddress == this.agentExtension) {\n                  thisAgentActive = true;\n\n                }\n                if (parsed_data.dialog.participants.Participant[i].state == \"ACTIVE\" && parsed_data.dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialog.participants.Participant[i].mediaAddress != this.agentExtension) {\n                  ForwardStartedAgent = parsed_data.dialog.participants.Participant[i].mediaAddress;\n\n                }\n\n                if (parsed_data.dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialog.participants.Participant[i].mediaAddress != this.agentExtension && parsed_data.dialog.participants.Participant[i].state == \"WRAP_UP\") {\n                  ForwardedAgentWrapUp = true;\n                }\n\n                if (parsed_data.dialog.participants.Participant[i].state == \"WRAP_UP\" && parsed_data.dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialog.participants.Participant[i].mediaAddress == this.agentExtension) {\n                  callWrappedUp = true;\n                }\n              }\n\n              if (thisAgentActive && this.activeCall == false) {\n                this.callAlerting = false;\n                this.activeCall = true;\n\n                // this.directPreviewCampaign = true;\n\n                if (this.directPreviewCampaign != true) {\n                  this.wrapUpPending = true;\n                }\n                if (parsed_data.dialog.mediaProperties.callvariables.CallVariable[13].value == \"DIRECT_PREVIEW_OUTBOUND\") {\n                  this.currentCustomerPhoneNumber = parsed_data.dialog.mediaProperties.callvariables.CallVariable[14].value;\n                  this.sessionId = parsed_data.dialog.id;\n                  this.directPreviewCampaign = true;\n                }\n                //   this.currentStatus = 'talking';\n                this.campaignCallAlerting = false;\n\n                this.startCallTiming();\n                this.screenpop(this.currentCustomerPhoneNumber);\n                this.callType = 1;\n                // this.wrapUpPending = true;\n                this.loggingCall(this.sessionId, this.currentCustomerPhoneNumber, 1, \"create\", false, null, null);\n              }\n\n              else if (Alerting && TotalAgents == 2 && this.directPreviewCampaign != true) {\n                this.callAlerting = true;\n                this.currentCustomerPhoneNumber = parsed_data.dialog.fromAddress;\n                this.notifyMe(\"Incomming Call\", \"Called Forwarded from Agent: \" + ForwardStartedAgent + \" for Customer: \" + parsed_data.dialog.fromAddress);\n              }\n              else if (OfferedCallHold) {\n                this.onHold = true;\n              }\n\n              if (callWrappedUp) {\n\n                this.activeCall = false;\n                this.onHold = false;\n                this.loading = false;\n                this.dialedNumber = null;\n                this.inWrapUpState = true;\n\n                if (this.directPreviewCampaign) {\n                  this.campaignWrapUpPending = true;\n\n                }\n\n                this.loggingCall(null, null, 2, \"update\", false, null, (this.callTimingSeconds + (this.callTimingMinutes * 60) + (this.callTimingHour * 3600)));\n\n                this.stopCallTiming();\n              }\n\n            }\n\n            //Outgoing Call scenario\n            else if (parsed_data.dialog.mediaProperties.callType == \"OUT\") {\n              flag = true;\n\n              let outgoingCallActive = false;\n              let outgoingCallFailed = false;\n              let calledPersonActive = false;\n              let ThisAgentActive = false;\n\n              let outgoingCallHold = false;\n\n              let outgoingCallInitiated = false;\n\n              this.currentCallID = parsed_data.dialog.id;\n              this.sessionId = parsed_data.dialog.mediaProperties.callvariables.CallVariable[4].value;\n              if (parsed_data.dialog.participants.Participant.state == \"FAILED\") {\n                outgoingCallFailed = true;\n              }\n\n              if (parsed_data.dialog.participants.Participant.state == \"INITIATED\") {\n                outgoingCallInitiated = true;\n              }\n\n              for (let i = 0; i < parsed_data.dialog.participants.Participant.length; i++) {\n                if (parsed_data.dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialog.participants.Participant[i].mediaAddress == this.agentExtension) {\n\n                  if (parsed_data.dialog.participants.Participant[i].state == \"ACTIVE\")\n                    ThisAgentActive = true;\n\n                  if (parsed_data.dialog.participants.Participant[i].state == \"HELD\")\n                    outgoingCallHold = true;\n\n                }\n                else if (parsed_data.dialog.participants.Participant[i].mediaAddressType == \"\" && parsed_data.dialog.participants.Participant[i].mediaAddress != this.agentExtension) {\n                  if (parsed_data.dialog.participants.Participant[i].state == \"ACTIVE\")\n                    calledPersonActive = true;\n                }\n              }\n\n              if (outgoingCallFailed) {\n                this.currentCallID = parsed_data.dialog.id;\n                this.sessionId = parsed_data.dialog.mediaProperties.callvariables.CallVariable[4].value;\n                this.callAlerting = false;\n                this.activeCall = false;\n                this.loading = false;\n                this.notifyMe(\"Outgoing Call\", \"Outgoing Call failed\");\n\n                var param = { errorCode: \"CALL_FAILED\" };\n                this.contextGlobal.invokeAction('OutgoingCallError', param);\n              }\n\n              if (ThisAgentActive && calledPersonActive) {\n                this.dialedNumber = null;\n                this.callAlerting = false;\n                // this.currentStatus = \"talking\";\n                this.activeCall = true;\n                this.startCallTiming();\n                this.callType = 2;\n                if (this.callCustomerPopup) {\n                  this.callCustomerPopup.close();\n                  this.callCustomerPopup = null;\n\n                }\n                this.currentCallID = parsed_data.dialog.id;\n                this.sessionId = parsed_data.dialog.mediaProperties.callvariables.CallVariable[4].value;\n                this.callAlerting = false;\n                //    this.activeCall = false;\n                this.loading = false;\n                this.loggingCall(this.sessionId, this.currentCustomerPhoneNumber, 1, \"create\", false, null, null);\n                this.notifyMe(\"Outgoing Call\", \"Outgoing Call Started\");\n\n              }\n              if (outgoingCallHold) {\n                this.onHold = true;\n                this.activeCall = true;\n              }\n              if (outgoingCallInitiated) {\n                this.loading = false;\n                this.notifyMe(\"Outgoing Call\", \"Outgoing Call Initiated\");\n                this.currentCustomerPhoneNumber = this.dialedNumber;\n                this.outgoingCallInitiated = true;\n              }\n\n            }\n\n            else if (parsed_data.dialog.mediaProperties.callType == \"CONSULT\") {\n              flag = true;\n\n              let ConsultAlerting = false;\n              let ThisAgentInitiating = false;\n              let ThisAgentHeld = false;\n              let ConsultActive = false;\n              let ThisAgentActive = false;\n              let ConsultCallEnded = false;\n              let ThisAgentWrap = false;\n              let callFailed = false;\n\n              if (typeof parsed_data.dialog.participants.Participant === 'object') {\n                if (parsed_data.dialog.participants.Participant.state == \"WRAP_UP\") {\n                  ThisAgentWrap = true;\n                }\n                if (parsed_data.dialog.participants.Participant.state == \"FAILED\" && parsed_data.dialog.participants.Participant.mediaAddress == this.agentExtension) {\n                  callFailed = true;\n                }\n                if (parsed_data.dialog.participants.Participant.state == \"INITIATED\") {\n                  ThisAgentInitiating = true;\n                }\n\n              }\n\n              for (let i = 0; i < parsed_data.dialog.participants.Participant.length; i++) {\n\n                if (parsed_data.dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialog.participants.Participant[i].mediaAddress == this.agentExtension) {\n\n                  if (parsed_data.dialog.participants.Participant[i].state == \"INITIATED\")\n                    ThisAgentInitiating = true;\n                  else if (parsed_data.dialog.participants.Participant[i].state == \"ACTIVE\")\n                    ThisAgentActive = true;\n                  else if (parsed_data.dialog.participants.Participant[i].state == \"DROPPED\")\n                    ConsultCallEnded = true;\n                  else if (parsed_data.dialog.participants.Participant[i].state == \"HELD\") {\n                    ThisAgentHeld = true;\n\n                  }\n\n                  else if (parsed_data.dialog.participants.Participant[i].state == \"WRAP_UP\")\n                    ThisAgentWrap = true;\n                }\n                // AGENT DEVICE condition is removed from below line to fullfull the condition when full number is used to consult. test this in normal consult call as well\n                else if (parsed_data.dialog.participants.Participant[i].mediaAddress != this.agentExtension) {\n                  if (parsed_data.dialog.participants.Participant[i].state == \"ALERTING\")\n                    ConsultAlerting = true;\n                  else if (parsed_data.dialog.participants.Participant[i].state == \"ACTIVE\") {\n                    ConsultActive = true;\n                    this.consultCallNumber = parsed_data.dialog.participants.Participant[i].mediaAddress;\n                  }\n\n                  else if (parsed_data.dialog.participants.Participant[i].state == \"DROPPED\")\n                    ConsultCallEnded = true;\n                }\n\n              }\n\n              if (ConsultAlerting && ThisAgentInitiating && !this.consultCallIniated) {\n                this.callType = 1;\n                this.currentConsultCallID = parsed_data.dialog.id;\n                this.sessionId = parsed_data.dialog.mediaProperties.callvariables.CallVariable[4].value;\n                this.consultMessage = \"Consulting Initiated..\";\n                this.loading = false;\n                this.consultCallIniated = true;\n                this.notifyMe(\"Incomming Call\", \"Called Consult Initiated \");\n                // this.consultCallActive = true;\n                this.mapConsultCallVariable(this.currentCallID, this.currentConsultCallID);\n\n              }\n              else if (ConsultActive && ThisAgentActive) {\n                if (!this.consultCallActive) {\n                  this.startConsultCallTiming();\n                }\n                this.callType = 1;\n                this.consultCallIniated = false; /**added when consult call is picked by the 2nd agent side and we no more need the call end button while ringing from 1st agent side */\n                this.currentConsultCallID = parsed_data.dialog.id;\n                this.sessionId = parsed_data.dialog.mediaProperties.callvariables.CallVariable[4].value;\n                this.consultMessage = \"Consulting Started..\";\n                // this.notifyMe(\"Incomming Call\", \"Called Consult Started \");\n                this.consultCallActive = true;\n                this.loading = false;\n                this.consultOnHold = false;\n                this.consultCallAlerting = false;\n\n                if (!this.activeCall) {\n                  this.loggingCall(this.currentConsultCallID, this.consultCallNumber, 1, \"create\", false, parsed_data.dialog.mediaProperties.callvariables.CallVariable[2].value, null);\n                }\n\n              }\n              else if (ThisAgentInitiating) {\n                this.currentConsultCallID = parsed_data.dialog.id;\n                this.sessionId = parsed_data.dialog.mediaProperties.callvariables.CallVariable[4].value;\n                this.consultMessage = \"Consulting Initiated..\";\n                this.loading = false;\n                this.consultCallIniated = true;\n                \n              }\n              else if (ThisAgentActive) {\n               \n                this.consultOnHold = false;\n                this.consultCallAlerting = false;\n                // debugger;\n              }\n              if (ThisAgentHeld && this.consultCallActive) {\n                this.consultOnHold = true;\n                this.consultMessage = \"Consult Call on Hold\";\n\n              }\n              if (ThisAgentWrap) {\n                this.loggingCall(null, null, 2, \"update\", false, null, (this.consultCallTimingSeconds + (this.consultCallTimingMinutes * 60) + (this.consultCallTimingHour * 3600)));\n                this.stopConsultCallTiming();\n\n                this.consultCallIniated = false; /**added when consult call is ended from the 1st agent side and when its not picked by 2nd agent */\n                // this.stopConsultCallTiming();\n                this.consultMessage = null;\n                this.notifyMe(\"Consult Call\", \"Consult Call Ended\");\n                this.consultCallActive = false;\n                this.currentConsultCallID = null;\n                this.dialedNumber = null;\n                this.consultOnHold = false;\n                this.consultCallAlerting = false;\n                this.loading = false;\n                this.callType = null;\n\n              }\n              if (callFailed) {\n                this.consultCallIniated = false; /**added when consult call is ended from the 1st agent side and when its not picked by 2nd agent */\n                // this.stopConsultCallTiming();\n                this.consultCallActive = false;\n                this.currentConsultCallID = null;\n                this.dialedNumber = null;\n                this.consultOnHold = false;\n                this.consultCallAlerting = false;\n                this.loading = false;\n                this.callType = null;\n              }\n              if (ConsultCallEnded) {\n\n                this.consultCallIniated = false; /**added when consult call is ended from the 1st agent side and when its not picked by 2nd agent */\n                // this.stopConsultCallTiming();\n                this.consultMessage = null;\n                this.notifyMe(\"Consult Call\", \"Consult Call Ended\");\n                this.consultCallActive = false;\n                this.currentConsultCallID = null;\n                this.dialedNumber = null;\n                this.consultOnHold = false;\n                this.consultCallAlerting = false;\n                this.loading = false;\n                this.callType = null;\n              }\n\n            }\n\n            else if (parsed_data.dialog.mediaProperties.callType == \"AGENT_INSIDE\") {\n              flag = true;\n\n              let ConsultAlerting = false;\n              let ThisAgentInitiating = false;\n              let ThisAgentHeld = false;\n              let ConsultActive = false;\n              let ThisAgentActive = false;\n              let ConsultCallEnded = false;\n              let ThisAgentWrap = false;\n              let callFailed = false;\n\n              if (typeof parsed_data.dialog.participants.Participant === 'object') {\n                if (parsed_data.dialog.participants.Participant.state == \"WRAP_UP\") {\n                  ThisAgentWrap = true;\n                }\n                if (parsed_data.dialog.participants.Participant.state == \"FAILED\" && parsed_data.dialog.participants.Participant.mediaAddress == this.agentExtension) {\n                  callFailed = true;\n                }\n                if (parsed_data.dialog.participants.Participant.state == \"INITIATED\") {\n                  ThisAgentInitiating = true;\n                }\n\n              }\n\n              for (let i = 0; i < parsed_data.dialog.participants.Participant.length; i++) {\n\n                if (parsed_data.dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialog.participants.Participant[i].mediaAddress == this.agentExtension) {\n\n                  // if (parsed_data.dialog.participants.Participant[i].state == \"INITIATED\")\n                  //   ThisAgentInitiating = true;\n                  if (parsed_data.dialog.participants.Participant[i].state == \"ACTIVE\")\n                    ThisAgentActive = true;\n                  // else if (parsed_data.dialog.participants.Participant[i].state == \"DROPPED\")\n                  //   ConsultCallEnded = true;\n                  else if (parsed_data.dialog.participants.Participant[i].state == \"HELD\") {\n                    ThisAgentHeld = true;\n                  }\n\n                  // else if (parsed_data.dialog.participants.Participant[i].state == \"WRAP_UP\")\n                  //   ThisAgentWrap = true;\n                }\n                else if (parsed_data.dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialog.participants.Participant[i].mediaAddress != this.agentExtension) {\n                  // if (parsed_data.dialog.participants.Participant[i].state == \"ALERTING\")\n                  //   ConsultAlerting = true;\n                  if (parsed_data.dialog.participants.Participant[i].state == \"ACTIVE\") {\n                    ConsultActive = true;\n                    this.consultCallNumber = parsed_data.dialog.participants.Participant[i].mediaAddress;\n                  }\n\n                  // else if (parsed_data.dialog.participants.Participant[i].state == \"DROPPED\")\n                  //   ConsultCallEnded = true;\n                }\n\n              }\n\n              if (ConsultActive && ThisAgentActive) {\n\n                this.activeCall = false;\n                this.callType = 1;\n                this.consultCallIniated = false;\n                this.currentConsultCallID = parsed_data.dialog.id;\n                this.sessionId = parsed_data.dialog.mediaProperties.callvariables.CallVariable[4].value;\n                this.consultCallActive = true;\n                this.loading = false;\n                this.consultOnHold = false;\n                this.consultCallAlerting = false;\n                this.stopCallTiming();\n                this.startConsultCallTiming();\n                if (!this.activeCall) {\n                  this.loggingCall(this.currentConsultCallID, this.consultCallNumber, 1, \"create\", false, parsed_data.dialog.mediaProperties.callvariables.CallVariable[2].value, null);\n                }\n              }\n\n              if (ThisAgentHeld && this.consultCallActive) {\n                this.consultOnHold = true;\n                this.consultMessage = \"Consult Call on Hold\";\n\n              }\n\n            }\n            else if (parsed_data.dialog.mediaProperties.callType == \"OTHER_IN\") {\n              flag = true;\n\n              let callPicked = false;\n              // if(typeof parsed_data.dialogs.Dialog.participants.Participant === 'object'){\n\n              //}\n              if (parsed_data.dialog.mediaProperties.queueName)\n                this.currentQueue = parsed_data.dialog.mediaProperties.queueName;\n\n              this.currentCallID = parsed_data.dialog.id;\n              this.sessionId = parsed_data.dialog.mediaProperties.callvariables.CallVariable[4].value;\n              let CallPicked = true;\n              let CallHoldByAgent = false;\n              let inWrapUpMode = false;\n\n              for (let i = 0; i < parsed_data.dialog.participants.Participant.length; i++) {\n\n                if (parsed_data.dialog.participants.Participant[i].state != \"ACTIVE\") {\n                  CallPicked = false;\n                }\n                if (parsed_data.dialog.participants.Participant[i].state == \"HELD\" && parsed_data.dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\") {\n                  CallHoldByAgent = true;\n                }\n                if (parsed_data.dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialog.participants.Participant[i].state == \"WRAP_UP\") {\n                  inWrapUpMode = true;\n\n                }\n              }\n\n              if (CallPicked && this.activeCall == false) {\n                // if(parsed_data.dialog.mediaProperties.callType != \"OUTBOUND\")\n                this.currentCustomerPhoneNumber = parsed_data.dialog.fromAddress;\n\n                this.directPreviewCampaign = true;\n                // this.currentStatus = 'talking';\n                this.callAlerting = false;\n                this.activeCall = true;\n                this.consultCallIniated = false; // Done because to make it false when new incoming call happens\n                this.startCallTiming();\n                this.screenpop(this.currentCustomerPhoneNumber);\n                this.callType = 3;\n                this.loggingCall(this.sessionId, this.currentCustomerPhoneNumber, 1, \"create\", false, null, null);\n                this.campaignCallInitiated = false;\n                this.campaignCallAlerting = false;\n              }\n              else if (CallHoldByAgent) {\n                this.currentCustomerPhoneNumber = parsed_data.dialog.fromAddress;\n                this.onHold = true;\n                this.activeCall = true;\n              }\n\n              if (inWrapUpMode) {\n\n                this.activeCall = false;\n                this.onHold = false;\n                this.currentCustomerPhoneNumber = null;\n                this.dialedNumber = null;\n                this.queueName = null;\n                this.loading = false;\n                this.callAlerting = false;\n                this.contactId = null;\n                this.incidentId = null;\n                this.inWrapUpState = true;\n                this.loggingCall(null, null, 2, \"update\", false, null, (this.callTimingSeconds + (this.callTimingMinutes * 60) + (this.callTimingHour * 3600)));\n                this.stopCallTiming();\n              }\n\n            }\n\n           \n            else if (parsed_data.dialog.mediaProperties.callType == \"OUTBOUND\") {\n\n              /* flag = true;\n               let outgoingCallEnded = false;\n               let thisAgentAlerting = false;\n               let consultingAgentInitiated = false;\n               */\n              let campaignCallInitiated = false;\n              let campaignCallFailed = false;\n              let wrapUp = false;\n              if (typeof parsed_data.dialog.participants.Participant === 'object') {\n                if (parsed_data.dialog.participants.Participant.state == \"INITIATED\") {\n                  campaignCallInitiated = true;\n                }\n                if (parsed_data.dialog.participants.Participant.state == \"FAILED\") {\n                  campaignCallFailed = true;\n                }\n              }\n\n              for (let i = 0; i < parsed_data.dialog.participants.Participant.length; i++) {\n                if (parsed_data.dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialog.participants.Participant[i].mediaAddress == this.agentExtension) {\n                  if (parsed_data.dialog.participants.Participant[i].state == \"WRAP_UP\")\n                    wrapUp = true;\n                  /*  if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"DROPPED\")\n                      outgoingCallEnded = true;\n                    else if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"ALERTING\")\n                      thisAgentAlerting = true;*/\n                }\n                /*else if (parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialogs.Dialog.participants.Participant[i].mediaAddress != this.agentExtension) {\n                  if (parsed_data.dialogs.Dialog.participants.Participant[i].state == \"INITIATED\")\n                    consultingAgentInitiated = true;\n                }*/\n              }\n              if (parsed_data.dialog.mediaProperties.callvariables.CallVariable[13].value == \"DIRECT_PREVIEW_OUTBOUND\") {\n                this.directPreviewCampaign = true;\n              }\n              if (parsed_data.dialog.mediaProperties.callvariables.CallVariable[17].value == \"Agent-Predictive\") {\n                this.directPreviewCampaign = true;\n                this.predictiveCampaign = true;\n                this.currentCustomerPhoneNumber = parsed_data.dialog.mediaProperties.callvariables.CallVariable[13].value;\n              }\n              if (campaignCallInitiated) {\n\n                this.campaignCallMessage = \"Campaign Call Initiated\";\n                this.campaignCallInitiated = true;\n\n                this.campaignCallID = parsed_data.dialog.id;\n                this.campaignCallBuddyName = parsed_data.dialog.mediaProperties.callvariables.CallVariable[16].value.replace(\",\", \" \");\n                this.currentCustomerPhoneNumber = parsed_data.dialog.mediaProperties.callvariables.CallVariable[14].value;\n\n              }\n              if (wrapUp) {\n                this.campaignWrapUpPending = true;\n              }\n              if (campaignCallFailed) {\n\n                this.campaignCallMessage = \"Campaign Call Failed\";\n\n                this.campaignCallEnd()\n\n              }\n\n            }\n\n          }\n        }\n\n        if (!flag) {\n\n          if (parsed_data.dialog.state == \"ACTIVE\") {\n            if (parsed_data.dialog.participants) {\n              if (parsed_data.dialog.participants.Participant) {\n\n                if (parsed_data.dialog.mediaProperties.queueName)\n                  this.currentQueue = parsed_data.dialog.mediaProperties.queueName;\n                this.currentCallID = parsed_data.dialog.id;\n                this.sessionId = parsed_data.dialog.mediaProperties.callvariables.CallVariable[4].value;\n                let CallPicked = true;\n                let CallHoldByAgent = false;\n                let inWrapUpMode = false;\n\n                for (let i = 0; i < parsed_data.dialog.participants.Participant.length; i++) {\n\n                  if (parsed_data.dialog.participants.Participant[i].state != \"ACTIVE\") {\n                    CallPicked = false;\n                  }\n                  if (parsed_data.dialog.participants.Participant[i].state == \"HELD\" && parsed_data.dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\") {\n                    CallHoldByAgent = true;\n                  }\n                  if (parsed_data.dialog.participants.Participant[i].mediaAddressType == \"AGENT_DEVICE\" && parsed_data.dialog.participants.Participant[i].state == \"WRAP_UP\") {\n                    inWrapUpMode = true;\n\n                  }\n                }\n\n                if (CallPicked && this.activeCall == false) {\n                  if (parsed_data.dialog.mediaProperties.callType != \"OUTBOUND\")\n                    this.currentCustomerPhoneNumber = parsed_data.dialog.fromAddress;\n                  if (parsed_data.dialog.mediaProperties.callvariables.CallVariable[17] && parsed_data.dialog.mediaProperties.callvariables.CallVariable[17]?.value == \"Agent-Predictive\") {\n\n                    this.predictiveCampaign = true;\n                    this.currentCustomerPhoneNumber = parsed_data.dialog.mediaProperties.callvariables.CallVariable[13].value;\n                  }\n                  this.wrapUpPending = true;\n                  this.callAlerting = false;\n                  this.activeCall = true;\n                  this.consultCallIniated = false; // Done because to make it false when new incoming call happens\n                  this.startCallTiming();\n                  this.screenpop(this.currentCustomerPhoneNumber);\n                  this.callType = 1;\n                  this.loggingCall(this.sessionId, this.currentCustomerPhoneNumber, 1, \"create\", false, null, null);\n                  //this.notifyMe(\"Incomming Call\",\"New Call from \"+parsed_data.dialogs.Dialog.participants.Participant[1].mediaAddress);\n                  //this.activeCall = true;\n\n                  this.campaignCallInitiated = false;\n                  this.campaignCallAlerting = false;\n                }\n                else if (CallHoldByAgent) {\n                  if (parsed_data.dialog.mediaProperties.callType != \"OUTBOUND\")\n                    this.currentCustomerPhoneNumber = parsed_data.dialog.fromAddress;\n                  this.onHold = true;\n                  this.activeCall = true;\n                }\n\n                if (inWrapUpMode) {\n\n                  this.activeCall = false;\n                  this.onHold = false;\n                  this.currentCustomerPhoneNumber = null;\n                  this.dialedNumber = null;\n                  this.queueName = null;\n                  this.loading = false;\n                  this.callAlerting = false;\n                  this.contactId = null;\n                  this.incidentId = null;\n                  this.inWrapUpState = true;\n                  this.loggingCall(null, null, 2, \"update\", false, null, (this.callTimingSeconds + (this.callTimingMinutes * 60) + (this.callTimingHour * 3600)));\n                  this.stopCallTiming();\n                }\n              }\n            }\n          }\n\n        }\n      }\n      else if (parsed_data.apiErrors) {\n        // if (parsed_data.apiErrors.apiError.errorType == \"Generic Unable To Login\") {\n        // this.systemUp = false;\n        // this.systemDownMessage = parsed_data.apiErrors.apiError.peripheralErrorText;\n        // this.notifyMe(\"Error\", this.systemDownMessage);\n        // //this.eventDisconnect();\n        // }\n        // if (parsed_data.apiErrors.apiError.errorType == \"Generic Error\" && parsed_data.apiErrors.apiError.errorMessage == \"CF_INVALID_DESTINATION\") {\n        // // this.systemUp = false;\n        // // this.systemDownMessage = parsed_data.apiErrors.apiError.peripheralErrorText;\n        // this.notifyMe(\"Error\", \"Wrong Number. Please enter correct number.\");\n        // this.loading = false;\n        // //this.eventDisconnect();\n        // }\n        var errType = parsed_data.apiErrors.apiError.errorType;\n        var errorMessage = parsed_data.apiErrors.apiError.errorMessage;\n        errType = errType.toLowerCase().trim();\n        if (errType == \"generic unable to login\") {\n          switch (parsed_data.apiErrors.apiError.peripheralErrorText) {\n            case \"The Unified CCX agent device is Off.\":\n              this.systemDownMessage = \"Please login into Cisco Jabber(softphone) and try again.\";\n              this.isError = true;\n              var that = this;\n              setTimeout(function () { that.isError = false; }, 10000);\n              break;\n            default:\n              this.systemUp = false;\n              this.loading = false;\n              this.systemDownMessage = parsed_data.apiErrors.apiError.peripheralErrorText;\n          }\n        }\n        if (errType == \"invalid device\" && errorMessage == \"CF_INVALID_LOGON_DEVICE_SPECIFIED\") {\n          this.systemDownMessage = \"Your OSC staff account is connected with wrong cisco extension number. Please contact administrator to correct it.\";\n          this.isError = true;\n          let that = this;\n          this.loading = false;\n          setTimeout(function () { that.isError = false; }, 10000);\n        }\n        if (parsed_data.apiErrors.apiError.errorType == \"generic error\" && parsed_data.apiErrors.apiError.errorMessage == \"CF_INVALID_DESTINATION\") {\n          this.notifyMe(\"Error\", \"Wrong Number. Please enter correct number.\");\n          this.loading = false;\n        }\n      }\n    },\n\n    pickupCall: function () {\n      this.listOfCurrentContacts = [];\n      this.listOfCurrentIncident = [];\n      this.selectedIncidentId = null;\n      this.selectedContactId = null;\n\n      let CallID = (this.consultCallAlerting) ? this.currentConsultCallID : this.currentCallID;\n      var that = this;\n      let headers = {\n        headers: {\n          'Content-Type': 'application/xml',\n          'Authorization': 'Basic ' + this.oauth\n        }\n      };\n      let xmlBodyStr = '<Dialog><targetMediaAddress>' + this.agentExtension + '</targetMediaAddress><requestedAction>ANSWER</requestedAction></Dialog>';\n      axios.put(this.url + \"Dialog/\" + CallID, xmlBodyStr, headers).then((response) => {\n        console.log(response);\n        console.log(\"Call Picked up\");\n      }).catch((err) => {\n        console.log(err);\n      });\n    },\n    pickupCampaignCall: function () {\n\n      var that = this;\n      let headers = {\n        headers: {\n          'Content-Type': 'application/xml',\n          'Authorization': 'Basic ' + this.oauth\n        }\n      };\n      let xmlBodyStr = '<Dialog><targetMediaAddress>' + this.agentExtension + '</targetMediaAddress><requestedAction>' + (this.directPreviewCampaign ? 'ANSWER' : 'ACCEPT') + '</requestedAction></Dialog>';\n      axios.put(this.url + \"Dialog/\" + this.campaignCallID, xmlBodyStr, headers).then((response) => {\n        console.log(response);\n        //   console.log(\"Call Picked up\");\n      }).catch((err) => {\n        console.log(err);\n      });\n    },\n\n    systemInfo: function () {\n      var that = this;\n      let headers = {\n        headers: {\n          'Content-Type': 'application/xml',\n          'Authorization': 'Basic ' + this.oauth\n        }\n      };\n      return axios.get(this.url + \"SystemInfo\", headers);\n    },\n    reasonCodes: function () {\n      this.loading = true;\n      var that = this;\n      let headers = {\n        headers: {\n          'Content-Type': 'application/xml',\n          'Authorization': 'Basic ' + this.oauth\n        }\n      };\n      axios.get(this.url + \"User/\" + this.username + \"/ReasonCodes?category=ALL\", headers).then((response) => {\n        var xml = response.data;\n        var reasonCodes = parser.parse(xml);\n        var reason_codes = reasonCodes.ReasonCodes.ReasonCode;\n        this.logoutStatus = [];\n        this.userStatus = [];\n        for (var i = 0; i < reason_codes.length; i++) {\n          if (reason_codes[i].forAll == false) {\n            if (reason_codes[i].category == \"LOGOUT\") {\n              this.logoutStatus.push({\n                id: reason_codes[i].uri.split(\"/\").pop(),\n                label: reason_codes[i].label\n              });\n            }\n            else if (reason_codes[i].category == \"NOT_READY\") {\n              this.userStatus.push({\n                id: reason_codes[i].uri.split(\"/\").pop(),\n                label: reason_codes[i].label\n              });\n            }\n          }\n        }\n        console.log(this.logoutStatus);\n        console.log(this.userStatus);\n        this.loading = false;\n      }).catch((err) => {\n        console.log(err);\n        this.loading = false;\n      });\n    },\n    login: function (username, password,extension) {\n      //this.agentExtension = this.agentMapping[username];\n     \n      this.loading = true;\n      var that = this;\n      let headers = {\n        headers: {\n          'Content-Type': 'application/xml',\n          'Authorization': 'Basic ' + btoa(username + \":\" + password)\n        }\n      };\n      let xmlBodyStr = '<User><state>LOGIN</state><extension>' + this.agentExtension + '</extension></User>';\n\n      axios.put(this.url + \"User/\" + username, xmlBodyStr, headers).then((response) => {\n        console.log(response);\n        this.password = password;\n        this.username = username;\n        this.oauth = btoa(this.username + \":\" + this.password);\n        this.loginPopup.close();\n        this.registerCustomerCallAction();\n        // this.reasonCodes();\n        this.loading = false;\n      }).catch((err) => {\n        console.log(err);\n       \n        this.loading = false;\n      });\n\n    },\n    openLogin: function () {\n      var pass = \"test\";\n      var user = \"agent3\";\n     // this.window.open('/http://192.168.6.108:8081/cti/login.html', '_blank');\n    this.eventConnect(user, pass);\n    },\n\n    logout: function () {\n\n      if (this.currentLogoutStatus != \"0\") {\n        this.loading = true;\n        var that = this;\n        let headers = {\n          headers: {\n            'Content-Type': 'application/xml',\n            'Authorization': 'Basic ' + this.oauth\n          }\n        };\n        let xmlBodyStr = '<User><state>LOGOUT</state><reasonCodeId>' + this.currentLogoutStatus + '</reasonCodeId></User>';\n        //console.log(this.url+this.username);\n        axios.put(this.url + \"User/\" + this.username, xmlBodyStr, headers).then((response) => {\n          console.log(response);\n          this.loading = false;\n          //this.eventDisconnect();\n        }).catch((err) => {\n          console.log(err);\n          this.loading = false;\n        });\n\n      }\n    },\n    defaultLogout: function (uName, pass) {\n      let headers = {\n        headers: {\n          'Content-Type': 'application/xml',\n          'Authorization': 'Basic ' + btoa(uName + \":\" + pass)\n        }\n      };\n      let xmlBodyStr = '<User><state>LOGOUT</state></User>';\n      return axios.put(this.url + \"User/\" + uName, xmlBodyStr, headers);\n    },\n    statusChange: function () {\n      this.loading = true;\n      var that = this;\n      let tempStatus = this.currentStatus;\n      this.currentStatus = this.previousStatus;\n      let headers = {\n        headers: {\n          'Content-Type': 'application/xml',\n          'Authorization': 'Basic ' + this.oauth\n        }\n      };\n      let xmlBodyStr\n      if (tempStatus == 'ready') {\n        xmlBodyStr = '<User><state>READY</state></User>';\n      } else {\n        xmlBodyStr = '<User><state>NOT_READY</state><reasonCodeId>' + tempStatus + '</reasonCodeId></User>';\n      }\n\n      axios.put(this.url + \"User/\" + this.username, xmlBodyStr, headers).then((response) => {\n        console.log(response);\n        this.loading = false;\n      }).catch((err) => {\n        console.log(err);\n        this.loading = false;\n      });\n\n    },\n    getUser: function () {\n      this.loading = true;\n      var that = this;\n      let headers = {\n        headers: {\n          'Content-Type': 'application/xml',\n          'Authorization': 'Basic ' + this.oauth\n        }\n      };\n      axios.get(this.url + \"User/\" + this.username, headers).then((response) => {\n        var xml = response.data;\n        var result1 = parser.parse(xml);\n        console.log(result1);\n        this.loggedIn = true;\n        this.loading = false;\n        //   axios.defaults.headers.common = {\n        //     \"X-Requested-With\": \"XMLHttpRequest\",\n        //     \"X-CSRFToken\": \"example-of-custom-header\"\n        //   };\n      }).catch((err) => {\n        console.log(err);\n        this.loading = false;\n      });\n    },\n    getUserInfo: function (uName, pwd) {\n      let headers = {\n        headers: {\n          'Content-Type': 'application/xml',\n          'Authorization': 'Basic ' + btoa(uName + \":\" + pwd)\n        }\n      };\n      return axios.get(this.url + \"User/\" + uName, headers);\n    },\n    startCallTiming: function () {\n\n      clearInterval(this.timerReference);\n      this.callTimingHour = 0;\n      this.callTimingMinutes = 0;\n      this.callTimingSeconds = 0;\n      var that = this;\n      console.log(\"Value of Time Reference\");\n      console.log(this.timerReference);\n      this.timerReference = setInterval(() => {\n        that.callTimingSeconds++;\n        if (that.callTimingSeconds == 60) {\n          that.callTimingSeconds = 0;\n          that.callTimingMinutes++;\n          if (that.callTimingMinutes == 60) {\n            that.callTimingMinutes = 0;\n            that.callTimingHour++;\n          }\n        }\n      }, 1000);\n\n    },\n    startConsultCallTiming: function () {\n      clearInterval(this.consultCallTimerReference);\n      this.consultCallTimingHour = 0;\n      this.consultCallTimingMinutes = 0;\n      this.consultCallTimingSeconds = 0;\n      var that = this;\n      console.log(\"Value of Time Reference\");\n      console.log(this.consultCallTimerReference);\n      this.consultCallTimerReference = setInterval(() => {\n        that.consultCallTimingSeconds++;\n        if (that.consultCallTimingSeconds == 60) {\n          that.consultCallTimingSeconds = 0;\n          that.consultCallTimingMinutes++;\n          if (that.consultCallTimingMinutes == 60) {\n            that.consultCallTimingMinutes = 0;\n            that.consultCallTimingHour++;\n          }\n        }\n      }, 1000);\n\n    },\n    stopConsultCallTiming: function () {\n      clearInterval(this.consultCallTimerReference);\n      this.consultCallTimingHour = 0;\n      this.consultCallTimingMinutes = 0;\n      this.consultCallTimingSeconds = 0;\n\n    },\n    stopCallTiming: function () {\n      clearInterval(this.timerReference);\n      this.callTimingHour = 0;\n      this.callTimingMinutes = 0;\n      this.callTimingSeconds = 0;\n\n    },\n\n    callEnd: function (customerCall) {\n\n      // let CallID = (this.consultCallActive)?this.currentConsultCallID:this.currentCallID;\n      let CallID = (!customerCall) ? this.currentConsultCallID : this.currentCallID;\n      //  let mediaAddress = (this.callAlerting)? this.currentCustomerPhoneNumber:((this.consultCallAlerting)? this.consultCallNumber: this.agentExtension);\n\n      this.loading = true;\n      let headers = {\n        headers: {\n          'Content-Type': 'application/xml',\n          'Authorization': 'Basic ' + this.oauth\n        }\n      };\n      let xmlBodyStr = \"<Dialog><targetMediaAddress>\" + this.agentExtension + \"</targetMediaAddress><requestedAction>DROP</requestedAction></Dialog>\";\n\n      axios.put(this.url + \"Dialog/\" + CallID, xmlBodyStr, headers).then((response) => {\n        console.log(response);\n\n      }).catch((err) => {\n        console.log(err);\n        this.loading = false;\n      });\n\n    },\n    campaignCallEnd: function () {\n      // let CallID = (this.consultCallActive)?this.currentConsultCallID:this.currentCallID;\n\n      //  let mediaAddress = (this.callAlerting)? this.currentCustomerPhoneNumber:((this.consultCallAlerting)? this.consultCallNumber: this.agentExtension);\n\n      this.loading = true;\n      let headers = {\n        headers: {\n          'Content-Type': 'application/xml',\n          'Authorization': 'Basic ' + this.oauth\n        }\n      };\n      let xmlBodyStr = \"<Dialog><targetMediaAddress>\" + this.agentExtension + \"</targetMediaAddress><requestedAction>\" + (this.campaignCallInitiated ? 'DROP' : 'REJECT') + \"</requestedAction></Dialog>\";\n\n      axios.put(this.url + \"Dialog/\" + this.campaignCallID, xmlBodyStr, headers).then((response) => {\n        console.log(response);\n        this.loading = false;\n      }).catch((err) => {\n        console.log(err);\n        this.loading = false;\n      });\n    },\n    putOnHold: function (customerCall) {\n\n      //let CallID = (this.consultCallActive)?this.currentConsultCallID:this.currentCallID;\n      let CallID = (!customerCall) ? this.currentConsultCallID : this.currentCallID;\n      var that = this;\n      let headers = {\n        headers: {\n          'Content-Type': 'application/xml',\n          'Authorization': 'Basic ' + this.oauth\n        }\n      };\n      let xmlBodyStr = '<Dialog><targetMediaAddress>' + this.agentExtension + '</targetMediaAddress><requestedAction>HOLD</requestedAction></Dialog>';\n      axios.put(this.url + \"Dialog/\" + CallID, xmlBodyStr, headers).then((response) => {\n        console.log(response);\n        console.log(\"Call Hold up\");\n      }).catch((err) => {\n        console.log(err);\n      });\n\n    },\n    playFromHold: function (customerCall) {\n\n      let CallID = (!customerCall) ? this.currentConsultCallID : this.currentCallID;\n      //  let CallID = (this.consultCallActive)?this.currentConsultCallID:this.currentCallID;\n\n      var that = this;\n      let headers = {\n        headers: {\n          'Content-Type': 'application/xml',\n          'Authorization': 'Basic ' + this.oauth\n        }\n      };\n      let xmlBodyStr = '<Dialog><targetMediaAddress>' + this.agentExtension + '</targetMediaAddress><requestedAction>RETRIEVE</requestedAction></Dialog>';\n      axios.put(this.url + \"Dialog/\" + CallID, xmlBodyStr, headers).then((response) => {\n        console.log(response);\n        console.log(\"Call Resume up\");\n        this.onHold = false;\n      }).catch((err) => {\n        console.log(err);\n      });\n\n    },\n\n    openDialpad: function () {\n      let IPopupWindow = this.IPopupWindowContext.createPopupWindow('dialPad');\n      IPopupWindow.setContentUrl(\"dialpad.html\");\n      IPopupWindow.setHeight('340px');\n      IPopupWindow.setTitle('Dialpad');\n      IPopupWindow.render();\n    },\n    consultCall: function () {\n\n      if (this.dialedNumber == null || this.dialedNumber.trim() == \"\" || this.dialedNumber.trim().length != 4) {\n        alert(\"Please enter correct number\");\n      }\n      else {\n        var that = this;\n        this.loading = true;\n        let headers = {\n          headers: {\n            'Content-Type': 'application/xml',\n            'Authorization': 'Basic ' + this.oauth\n          }\n        };\n\n        let xmlBodyStr = '<Dialog><requestedAction>CONSULT_CALL</requestedAction><toAddress>' + this.dialedNumber.trim() + '</toAddress><targetMediaAddress>' + this.agentExtension + '</targetMediaAddress></Dialog>';\n        axios.put(this.url + \"Dialog/\" + this.currentCallID, xmlBodyStr, headers).then((response) => {\n          console.log(response);\n          console.log(\"Call Consult Started\");\n\n        }).catch((err) => {\n          console.log(err);\n        });\n      }\n\n    },\n\n    mapConsultCallVariable: function (callData, CallID) {\n      var that = this;\n      //  this.loading = true;\n      let headers = {\n        headers: {\n          'Content-Type': 'application/xml',\n          'Authorization': 'Basic ' + this.oauth\n        }\n      };\n\n      let xmlBodyStr = '<Dialog><requestedAction>UPDATE_CALL_DATA</requestedAction><mediaProperties><callvariables><CallVariable><name>callVariable3</name><value>' + callData + '</value></CallVariable></callvariables></mediaProperties></Dialog>';\n      axios.put(this.url + \"Dialog/\" + CallID, xmlBodyStr, headers).then((response) => {\n        console.log(response);\n        console.log(\"Call Variable Updated\");\n\n      }).catch((err) => {\n        console.log(err);\n      });\n\n    },\n    forwardCall: function () {\n\n      if (this.dialedNumber == null || this.dialedNumber.trim() == \"\" || this.dialedNumber.trim().length != 4) {\n        alert(\"Please enter the number\");\n      }\n      else {\n        this.loading = true;\n        var that = this;\n        let headers = {\n          headers: {\n            'Content-Type': 'application/xml',\n            'Authorization': 'Basic ' + this.oauth\n          }\n        };\n        let xmlBodyStr = '<Dialog><requestedAction>TRANSFER_SST</requestedAction><toAddress>' + this.dialedNumber.trim() + '</toAddress><targetMediaAddress>' + this.agentExtension + '</targetMediaAddress></Dialog>';\n        axios.put(this.url + \"Dialog/\" + this.currentCallID, xmlBodyStr, headers).then((response) => {\n          console.log(response);\n          console.log(\"Call Forward Started\");\n          // this.mapConsultCallVariable(\"CONSULT_CALL\",this.currentCallID);\n        }).catch((err) => {\n          console.log(err);\n        });\n      }\n    },\n\n    outgoingCall: function () {\n\n      this.listOfCurrentContacts = [];\n      this.listOfCurrentIncident = [];\n      this.selectedIncidentId = null;\n      this.selectedContactId = null;\n\n      if (this.dialedNumber != \"\" && this.dialedNumber != null) {\n        this.loading = true;\n        var that = this;\n        let headers = {\n          headers: {\n            'Content-Type': 'application/xml',\n            'Authorization': 'Basic ' + this.oauth\n          }\n        };\n\n        let xmlBodyStr = '<Dialog><requestedAction>MAKE_CALL</requestedAction><fromAddress>' + this.agentExtension + '</fromAddress><toAddress>' + this.dialedNumber + '</toAddress></Dialog>';\n        axios.post(this.url + \"User/\" + this.username + \"/Dialogs\", xmlBodyStr, headers).then((response) => {\n          console.log(response);\n          console.log(\"Outgoing Call Started\");\n        }).catch((err) => {\n          console.log(err);\n        });\n        // e.preventDefault();\n      } else {\n        alert(\"Please enter the number\");\n      }\n\n    },\n   \n\n\n\n  \n\n    \n  }\n}","import { render } from \"./App.vue?vue&type=template&id=43734d1b\"\nimport script from \"./script.js?vue&type=script&lang=js\"\nexport * from \"./script.js?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\Mouadh Zidi\\\\testlast\\\\cti-integration-vue-master\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';\r\nimport Login from '@/Pages/Login/App.vue';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login,\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\nexport default router;","import App from \"./App.vue\";\nimport { createApp } from \"vue\";\nimport router from \"./router.js\";\nimport loginApp from \"./../Login/main.js\";\n\nconst app = createApp(App);\napp.use(router);\n\napp.mount(\"#barApp\");\n\n// Mount the login app to #loginApp\nloginApp.mount(\"#loginApp\");","\n\nimport App from \"./App.vue\";\nimport { createApp } from \"vue\";\nconst app = createApp(App);\n\napp.mount(\"#loginApp\");","<template>\n  <div id=\"login-app\">\n    <form method=\"post\" id=\"login\">\n      <div class=\"container\">\n        <label for=\"uname\"><b>Username</b></label>\n        <input type=\"text\" v-model=\"username\" placeholder=\"Enter Cisco Finesse Username\" name=\"uname\" required>\n\n        <label for=\"psw\"><b>Password</b></label>\n        <input type=\"password\" v-model=\"password\" placeholder=\"Enter Cisco Finesse Password\" name=\"psw\" required>\n\n        <label for=\"extension\"><b>Extension</b></label>\n        <input type=\"text\" v-model=\"extension\" placeholder=\"Enter extension\" name=\"extension\" required>\n\n        <label v-if=\"loginFailed\" style=\"color:red\">{{errorMessage}}</label>\n        <button type=\"button\" v-on:click=\"login\" v-bind:disabled=\"loading\"><i v-if=\"loading\" class=\"fa fa-spinner fa-spin\"></i> Login</button>\n\n      </div>\n    </form>\n    <div class=\"loading\" v-show=\"loading\" id=\"loading\">Loading&#8230;</div>\n  </div>\n</template>\n\n\n\n\n<script src=\"./script.js\"></script>\n","import './../../assets/css/login.css';\nexport default {\n    name: 'Login',\n    data: function(){\n        return{\n            username: null,\n            password: null,\n            extension: null,\n            loginFailed: false,\n            loading: false,\n            errorMessage: \"Unable to Login. Please try again.\",\n            url: null\n        }\n    },\n    methods: {\n        login: function () {\n          this.loading = true;\n          var that = this;\n          that.loginFailed = false;\n          \n          var param = { username: that.username, password: that.password,extension: that.extension};\n        }\n    \n    \n      }\n  }","import { render } from \"./App.vue?vue&type=template&id=40133c30\"\nimport script from \"./script.js?vue&type=script&lang=js\"\nexport * from \"./script.js?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\Mouadh Zidi\\\\testlast\\\\cti-integration-vue-master\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}